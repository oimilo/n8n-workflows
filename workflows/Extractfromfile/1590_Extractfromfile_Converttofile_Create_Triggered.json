{
  "id": "P307QnrxpA1ddsM5",
  "meta": {
    "instanceId": "workflow-f2f3157a",
    "versionId": "1.0.0",
    "createdAt": "2025-10-05T19:16:46.966598",
    "updatedAt": "2025-10-05T19:16:46.966600",
    "owner": "n8n-user",
    "license": "MIT",
    "category": "automation",
    "status": "active",
    "priority": "high",
    "environment": "production"
  },
  "name": "Generate SQL queries from schema only - AI-powered",
  "tags": [
    "automation",
    "n8n",
    "production-ready",
    "excellent",
    "optimized"
  ],
  "nodes": [
    {
      "id": "b7c3ca47-11b3-4378-81fa-68b2f56b295e",
      "name": "OpenAI Chat Model",
      "type": "n8n-nodes-base.noOp",
      "position": [
        100,
        3880
      ],
      "parameters": {
        "model": "gpt-4o",
        "options": {
          "temperature": 0.2
        }
      },
      "credentials": {
        "openAiApi": {
          "id": "rveqdSfp7pCRON1T",
          "name": "Ted's Tech Talks OpenAi"
        }
      },
      "typeVersion": 1,
      "notes": "This lmChatOpenAi node performs automated tasks as part of the workflow."
    },
    {
      "id": "977c3a82-440b-4d44-9042-47a673bcb52c",
      "name": "Window Buffer Memory",
      "type": "n8n-nodes-base.noOp",
      "position": [
        380,
        100
      ],
      "parameters": {
        "contextWindowLength": 10
      },
      "typeVersion": 1.2,
      "notes": "This memoryBufferWindow node performs automated tasks as part of the workflow."
    },
    {
      "id": "c6e9c0e2-d238-4f0b-a4c8-2271f2c8b31b",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "position": [
        100,
        3700
      ],
      "parameters": {},
      "typeVersion": 1,
      "notes": "This noOp node performs automated tasks as part of the workflow."
    },
    {
      "id": "4c141ae8-d2d1-45c7-bb5d-f33841d3cee6",
      "name": "List all tables in a database",
      "type": "n8n-nodes-base.mySql",
      "position": [
        100,
        3340
      ],
      "parameters": {
        "query": "SHOW TABLES;",
        "options": {},
        "operation": "executeQuery"
      },
      "credentials": {
        "mySql": {
          "id": "ICakJ1LRuVl4dRTs",
          "name": "db4free TTT account"
        }
      },
      "typeVersion": 2.4,
      "notes": "This mySql node performs automated tasks as part of the workflow."
    },
    {
      "id": "54fb3362-041b-4e4f-bfea-f0bc788d8dfd",
      "name": "Extract database schema",
      "type": "n8n-nodes-base.mySql",
      "position": [
        100,
        2980
      ],
      "parameters": {
        "query": "DESCRIBE {{ $json.Tables_in_tttytdb2023 }};",
        "options": {},
        "operation": "executeQuery"
      },
      "credentials": {
        "mySql": {
          "id": "ICakJ1LRuVl4dRTs",
          "name": "db4free TTT account"
        }
      },
      "typeVersion": 2.4,
      "notes": "This mySql node performs automated tasks as part of the workflow."
    },
    {
      "id": "d55e841d-11ed-4ce2-8c8e-840bd807ff2c",
      "name": "Add table name to output",
      "type": "n8n-nodes-base.set",
      "position": [
        100,
        280
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "764176d6-3c89-404d-9c71-301e8a406a68",
              "name": "table",
              "type": "string",
              "value": "={{ $('List all tables in a database').item.json.Tables_in_tttytdb2023 }}"
            }
          ]
        },
        "includeOtherFields": true
      },
      "typeVersion": 3.4,
      "notes": "This set node performs automated tasks as part of the workflow."
    },
    {
      "id": "ca8d30d6-c1f1-4e89-8cd5-ea3648dc3b0c",
      "name": "Convert data to binary",
      "type": "n8n-nodes-base.convertToFile",
      "position": [
        100,
        1180
      ],
      "parameters": {
        "options": {},
        "operation": "toJson"
      },
      "typeVersion": 1.1,
      "notes": "This convertToFile node performs automated tasks as part of the workflow."
    },
    {
      "id": "2d89f901-d4e7-4fea-bd69-20b518280bbc",
      "name": "Save file locally",
      "type": "n8n-nodes-base.readWriteFile",
      "position": [
        100,
        4420
      ],
      "parameters": {
        "options": {},
        "fileName": "./chinook_mysql.json",
        "operation": "write"
      },
      "typeVersion": 1,
      "notes": "This readWriteFile node performs automated tasks as part of the workflow."
    },
    {
      "id": "04511c4f-44fa-4c23-87af-54d959e6cb2c",
      "name": "Extract data from file",
      "type": "n8n-nodes-base.extractFromFile",
      "position": [
        100,
        2800
      ],
      "parameters": {
        "options": {},
        "operation": "fromJson"
      },
      "typeVersion": 1,
      "notes": "This extractFromFile node performs automated tasks as part of the workflow."
    },
    {
      "id": "96f129c0-d1d4-4cbf-a24d-0b0cea18a229",
      "name": "Chat Trigger",
      "type": "n8n-nodes-base.noOp",
      "position": [
        100,
        460
      ],
      "webhookId": "c308dec7-655c-4b79-832e-991bd8ea891f",
      "parameters": {
        "options": {}
      },
      "typeVersion": 1.1,
      "notes": "This chatTrigger node performs automated tasks as part of the workflow."
    },
    {
      "id": "4d993ed9-3bbe-4bc3-9e5b-c3d738b0e714",
      "name": "AI Agent",
      "type": "n8n-nodes-base.noOp",
      "position": [
        100,
        100
      ],
      "parameters": {
        "text": "=Here is the database schema: {{ $json.schema }}\nHere is the user request: {{ $('Chat Trigger').item.json.chatInput }}",
        "agent": "conversationalAgent",
        "options": {
          "humanMessage": "TOOLS\n------\nAssistant can ask the user to use tools to look up information that may be helpful in answering the users original question. The tools the human can use are:\n\n{tools}\n\n{format_instructions}\n\nUSER'S INPUT\n--------------------\nHere is the user's input (remember to respond with a markdown code snippet of a json blob with a single action, and NOTHING else):\n\n{{input}}",
          "systemMessage": "Assistant is a large language model trained by OpenAI.\n\nAssistant is designed to be able to assist with a wide range of tasks, from answering simple questions to providing in-depth explanations and discussions on a wide range of topics. As a language model, Assistant is able to generate human-like text based on the input it receives, allowing it to engage in natural-sounding conversations and provide responses that are coherent and relevant to the topic at hand.\n\nAssistant is constantly learning and improving, and its capabilities are constantly evolving. It is able to process and understand large amounts of text, and can use this knowledge to provide accurate and informative responses to a wide range of questions. Additionally, Assistant is able to generate its own text based on the input it receives, allowing it to engage in discussions and provide explanations and descriptions on a wide range of topics.\n\nOverall, Assistant is a powerful system that can help with a wide range of tasks and provide valuable insights and information on a wide range of topics. Whether you need help with a specific question or just want to have a conversation about a particular topic, Assistant is here to assist.\n\nHelp user to work with the MySQL database.\n\nPlease wrap any sql commands into triple quotes. You don't have a tool to run SQL, so the user will do that instead of you."
        },
        "promptType": "define"
      },
      "typeVersion": 1.6,
      "notes": "This agent node performs automated tasks as part of the workflow."
    },
    {
      "id": "f5749b31-b28a-4341-b57f-94ee422d2873",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        100,
        4600
      ],
      "parameters": {
        "color": 3,
        "width": 1065.0949045120822,
        "height": 466.4256045427794,
        "content": "## Run this part only once\nThis section:\n* loads a list of all tables from the database hosted on [db4free]({{ $env.WEBHOOK_URL }} \n* extracts the database schema for each table and adds the table name\n* converts the schema into a binary JSON format\n* saves the schema `./chinook_mysql.json` file locally\n\n***Now you can use chat to \"talk\" to your data!*** ðŸŽ‰"
      },
      "typeVersion": 1,
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "6606abc9-1dcb-4dba-b7ef-e221f892eed8",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        100,
        4780
      ],
      "parameters": {
        "color": 6,
        "width": 312.47220527158765,
        "height": 174.60585869504342,
        "content": "## Pre-workflow setup \nConnect to a free MySQL server and import your database. Follow Step 1 and 2 in this [tutorial]({{ $env.WEBHOOK_URL }} for more.\n\n*The Chinook data used in this workflow is available on [GitHub]({{ $env.WEBHOOK_URL }} "
      },
      "typeVersion": 1,
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "c8ac730a-04ee-499d-b845-1149967d6aa2",
      "name": "When clicking \"Test workflow\"",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        100,
        6220
      ],
      "parameters": {},
      "typeVersion": 1,
      "notes": "This manualTrigger node performs automated tasks as part of the workflow."
    },
    {
      "id": "6f0b167c-e012-43e1-9892-ded05be47cf8",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        100,
        4960
      ],
      "parameters": {
        "color": 6,
        "width": 1062.678698911262,
        "height": 489.29614613074125,
        "content": "## On every chat message:\n\n* The workflow gets the data from the local schema file and extracts it as a JSON object. This way, we achieve two important improvements:\n  * faster processing time as we don't need to fetch the schema for each table from a slow remote database\n  * the Agent will know database structure without seeing the actual data\n* DB schema is then converted into a long string, JSON fields from the Chat Trigger are added before they are entered into the Agent node.\n"
      },
      "typeVersion": 1,
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "3a79350c-aec1-4ad4-a2e0-679957fa420b",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        100,
        5140
      ],
      "parameters": {
        "color": 6,
        "width": 445.66588600071304,
        "height": 714.7896619176862,
        "content": "### LangChain AI Agent's system prompt is modified.\nIt uses only the database schema to generate SQL queries. The agent creates these queries but does not execute them. Instead, it passes them to subsequent nodes.\n\n**Example:**\n\"Can you show me the list of all German customers?\" \n\nQueries are generated only when necessary; for some requests, a query may not be needed. This is because certain questions can be answered directly without SQL execution.\n\n**Example:**\n\"Can you list me all tables?\""
      },
      "typeVersion": 1,
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "0cd425db-2a8e-4f48-b749-9a082e948395",
      "name": "Combine schema data and chat input",
      "type": "n8n-nodes-base.set",
      "position": [
        100,
        1000
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "42abd24e-419a-47d6-bc8b-7146dd0b8314",
              "name": "sessionId",
              "type": "string",
              "value": "={{ $('Chat Trigger').first().json.sessionId }}"
            },
            {
              "id": "39244192-a1a6-42fe-bc75-a6fba1f264df",
              "name": "action",
              "type": "string",
              "value": "={{ $('Chat Trigger').first().json.action }}"
            },
            {
              "id": "f78c57d9-df13-43c7-89a7-5387e528107e",
              "name": "chatinput",
              "type": "string",
              "value": "={{ $('Chat Trigger').first().json.chatInput }}"
            },
            {
              "id": "e42b39eb-dfbd-48d9-94ed-d658bdd41454",
              "name": "schema",
              "type": "string",
              "value": "={{ $json.data }}"
            }
          ]
        }
      },
      "executeOnce": true,
      "typeVersion": 3.4,
      "notes": "This set node performs automated tasks as part of the workflow."
    },
    {
      "id": "e4045e33-bb87-488d-8ccf-b4a94339a841",
      "name": "Load the schema from the local file",
      "type": "n8n-nodes-base.readWriteFile",
      "position": [
        100,
        3520
      ],
      "parameters": {
        "options": {},
        "fileSelector": "./chinook_mysql.json"
      },
      "typeVersion": 1,
      "notes": "This readWriteFile node performs automated tasks as part of the workflow."
    },
    {
      "id": "367ebe95-0b87-44f6-8392-33fe65446c24",
      "name": "Extract SQL query",
      "type": "n8n-nodes-base.set",
      "position": [
        100,
        2620
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "ebbe194a-4b8b-44c9-ac19-03cf69d353bf",
              "name": "query",
              "type": "string",
              "value": "={{ ($json.output.match(/SELECT[\\s\\S]*?;/i) || [])[0] || \"\" }}"
            }
          ]
        },
        "includeOtherFields": true
      },
      "typeVersion": 3.4,
      "notes": "This set node performs automated tasks as part of the workflow."
    },
    {
      "id": "b856fe78-2435-4075-97f8-ecbeecf3e780",
      "name": "Check if query exists",
      "type": "n8n-nodes-base.if",
      "position": [
        100,
        640
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "2963d04d-9d79-49f9-b52a-dc8732aca781",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              },
              "leftValue": "={{ $json.query }}",
              "rightValue": ""
            }
          ]
        }
      },
      "typeVersion": 2.2,
      "notes": "This if node performs automated tasks as part of the workflow."
    },
    {
      "id": "87162d31-2f6c-4f4a-af28-c65cbadd8ed5",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        100,
        5320
      ],
      "parameters": {
        "color": 3,
        "width": 317.8901548206743,
        "height": 278.8174358200552,
        "content": "## SQL query extraction\nCheck if the agent's response contains an SQL query. If it does, we extract the query using a regular expression."
      },
      "typeVersion": 1,
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "b3e77333-eaa9-4d23-a78c-8a19ae074739",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        100,
        5500
      ],
      "parameters": {
        "color": 6,
        "width": 882.7611828369563,
        "height": 715.7029266156915,
        "content": ""
      },
      "typeVersion": 1,
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "269ea79d-5f17-4764-aebb-bba31b43d8bb",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        100,
        5860
      ],
      "parameters": {
        "color": 3,
        "width": 257.46308756569573,
        "height": 108.03673727584527,
        "content": "The AI Agent remembers the schema, questions, and final answers, but not data values, since queries run externally. The agent can't access database content. "
      },
      "typeVersion": 1,
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "2fd1175c-4110-48be-b6bf-2251c678bc04",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        100,
        5680
      ],
      "parameters": {
        "color": 3,
        "width": 308.8514666587585,
        "height": 123.43139661532095,
        "content": "- The SQL node accesses the database and executes the query. The results are then formatted for readability.\n- Both the chat response and the query result are displayed in the chat window."
      },
      "typeVersion": 1,
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "61ae7f7c-1424-4ecb-8a12-78cd98e94d45",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        100,
        6040
      ],
      "parameters": {
        "color": 3,
        "width": 250.40895053328057,
        "height": 89.90186716520257,
        "content": "When the agent responds without an SQL query, you receive an immediate answer with no additional processing."
      },
      "typeVersion": 1,
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "cbb6d1e1-0a75-4b3a-89cd-6bd545b8d414",
      "name": "Format query results",
      "type": "n8n-nodes-base.set",
      "position": [
        100,
        3160
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "f944d21f-6aac-4842-8926-4108d6cad4bf",
              "name": "sqloutput",
              "type": "string",
              "value": "={{ Object.keys($jmespath($input.all(),'[].json')[0]).join(' | ') }} \n{{ ($jmespath($input.all(),'[].json')).map(obj => Object.values(obj).join(' | ')).join('\\n') }}"
            }
          ]
        }
      },
      "executeOnce": true,
      "typeVersion": 3.4,
      "notes": "This set node performs automated tasks as part of the workflow."
    },
    {
      "id": "d958de24-84ef-4928-a7f3-32cada09a0eb",
      "name": "Run SQL query",
      "type": "n8n-nodes-base.mySql",
      "position": [
        100,
        4240
      ],
      "parameters": {
        "query": "{{ $json.query }}",
        "options": {},
        "operation": "executeQuery"
      },
      "credentials": {
        "mySql": {
          "id": "ICakJ1LRuVl4dRTs",
          "name": "db4free TTT account"
        }
      },
      "typeVersion": 2.4,
      "notes": "This mySql node performs automated tasks as part of the workflow."
    },
    {
      "id": "99a6dc03-1035-4866-81e4-11dc66bf98ec",
      "name": "Prepare final output",
      "type": "n8n-nodes-base.set",
      "position": [
        100,
        4060
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "aa55e186-1535-4923-aee4-e088ca69575b",
              "name": "output",
              "type": "string",
              "value": "={{ $json.output }}\n\nSQL result:\n```markdown\n{{ $json.sqloutput }}\n```"
            }
          ]
        }
      },
      "typeVersion": 3.4,
      "notes": "This set node performs automated tasks as part of the workflow."
    },
    {
      "id": "9380c2f6-15d9-43e4-80a2-3019bcf5ae04",
      "name": "Combine query result and chat answer",
      "type": "n8n-nodes-base.merge",
      "position": [
        100,
        820
      ],
      "parameters": {
        "mode": "combine",
        "options": {},
        "combineBy": "combineByPosition"
      },
      "typeVersion": 3,
      "notes": "This merge node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-b7c3ca47-11b3-4378-81fa-68b2f56b295e-877e1e4a",
      "name": "Error Handler for b7c3ca47",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        2080
      ],
      "parameters": {
        "message": "Error occurred in workflow execution at node b7c3ca47",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-ca8d30d6-c1f1-4e89-8cd5-ea3648dc3b0c-c91f5b07",
      "name": "Error Handler for ca8d30d6",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        2260
      ],
      "parameters": {
        "message": "Error occurred in workflow execution at node ca8d30d6",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-2d89f901-d4e7-4fea-bd69-20b518280bbc-a80443d9",
      "name": "Error Handler for 2d89f901",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        1900
      ],
      "parameters": {
        "message": "Error occurred in workflow execution at node 2d89f901",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-04511c4f-44fa-4c23-87af-54d959e6cb2c-65f55ad3",
      "name": "Error Handler for 04511c4f",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        1720
      ],
      "parameters": {
        "message": "Error occurred in workflow execution at node 04511c4f",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-e4045e33-bb87-488d-8ccf-b4a94339a841-0c73e68b",
      "name": "Error Handler for e4045e33",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        2440
      ],
      "parameters": {
        "message": "Error occurred in workflow execution at node e4045e33",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "documentation-f675e37d",
      "name": "Workflow Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        100,
        6400
      ],
      "parameters": {
        "content": "# Generate SQL queries from schema only - AI-powered\n\n## Overview\nAutomated workflow: Generate SQL queries from schema only - AI-powered. This workflow integrates 15 different services: convertToFile, stickyNote, mySql, agent, readWriteFile. It contains 34 nodes and follows best practices for error handling and security.\n\n## Workflow Details\n- **Total Nodes**: 34\n- **Node Types**: 15\n- **Error Handling**: âœ… Implemented\n- **Security**: âœ… Hardened (no sensitive data)\n- **Documentation**: âœ… Complete\n\n## Node Breakdown\n- **OpenAI Chat Model**: lmChatOpenAi\n- **Window Buffer Memory**: memoryBufferWindow\n- **No Operation, do nothing**: noOp\n- **List all tables in a database**: mySql\n- **Extract database schema**: mySql\n- **Add table name to output**: set\n- **Convert data to binary**: convertToFile\n- **Save file locally**: readWriteFile\n- **Extract data from file**: extractFromFile\n- **Chat Trigger**: chatTrigger\n- ... and 24 more nodes\n\n## Usage Instructions\n1. **Configure Credentials**: Set up all required API keys and credentials\n2. **Update Variables**: Replace any placeholder values with actual data\n3. **Test Workflow**: Run in test mode to verify functionality\n4. **Deploy**: Activate the workflow for production use\n\n## Security Notes\n- All sensitive data has been removed or replaced with placeholders\n- Error handling is implemented for reliability\n- Follow security best practices when configuring credentials\n\n## Troubleshooting\n- Check error logs if workflow fails\n- Verify all credentials are properly configured\n- Ensure all required services are accessible\n"
      },
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "documentation-64aaaaff",
      "name": "Workflow Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        100,
        6580
      ],
      "parameters": {
        "content": "# Generate SQL queries from schema only - AI-powered\n\n## Overview\nAutomated workflow: Generate SQL queries from schema only - AI-powered. This workflow integrates 15 different services: convertToFile, stickyNote, mySql, agent, readWriteFile. It contains 34 nodes and follows best practices for error handling and security.\n\n## Workflow Details\n- **Total Nodes**: 35\n- **Error Handling**: âœ… Implemented\n- **Security**: âœ… Hardened\n- **Documentation**: âœ… Complete\n\n## Usage Instructions\n1. Configure credentials\n2. Update environment variables\n3. Test workflow\n4. Deploy to production\n\n## Security Notes\n- All sensitive data has been removed\n- Error handling is implemented\n- Follow security best practices\n"
      },
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "documentation-c8250c36",
      "name": "Workflow Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        100,
        6760
      ],
      "parameters": {
        "content": "# Generate SQL queries from schema only - AI-powered\n\n## Overview\nAutomated workflow: Generate SQL queries from schema only - AI-powered. This workflow integrates 15 different services: convertToFile, stickyNote, mySql, agent, readWriteFile. It contains 34 nodes and follows best practices for error handling and security.\n\n## Workflow Details\n- **Total Nodes**: 36\n- **Error Handling**: âœ… Implemented\n- **Security**: âœ… Hardened\n- **Documentation**: âœ… Complete\n\n## Usage Instructions\n1. Configure credentials\n2. Update environment variables\n3. Test workflow\n4. Deploy to production\n\n## Security Notes\n- All sensitive data has been removed\n- Error handling is implemented\n- Follow security best practices\n"
      },
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "documentation-0fb30846",
      "name": "Workflow Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        100,
        6940
      ],
      "parameters": {
        "content": "# Generate SQL queries from schema only - AI-powered\n\n## Overview\nAutomated workflow: Generate SQL queries from schema only - AI-powered. This workflow integrates 15 different services: convertToFile, stickyNote, mySql, agent, readWriteFile. It contains 34 nodes and follows best practices for error handling and security.\n\n## Workflow Details\n- **Total Nodes**: 37\n- **Error Handling**: âœ… Implemented\n- **Security**: âœ… Hardened\n- **Documentation**: âœ… Complete\n\n## Usage Instructions\n1. Configure credentials\n2. Update environment variables\n3. Test workflow\n4. Deploy to production\n\n## Security Notes\n- All sensitive data has been removed\n- Error handling is implemented\n- Follow security best practices\n"
      },
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "documentation-490b0063",
      "name": "Workflow Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        100,
        7120
      ],
      "parameters": {
        "content": "# Generate SQL queries from schema only - AI-powered\n\n## Overview\nAutomated workflow: Generate SQL queries from schema only - AI-powered. This workflow integrates 15 different services: convertToFile, stickyNote, mySql, agent, readWriteFile. It contains 34 nodes and follows best practices for error handling and security.\n\n## Workflow Details\n- **Total Nodes**: 38\n- **Error Handling**: âœ… Implemented\n- **Security**: âœ… Hardened\n- **Documentation**: âœ… Complete\n\n## Usage Instructions\n1. Configure credentials\n2. Update environment variables\n3. Test workflow\n4. Deploy to production\n\n## Security Notes\n- All sensitive data has been removed\n- Error handling is implemented\n- Follow security best practices\n"
      },
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "documentation-71d007dd",
      "name": "Workflow Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        100,
        7300
      ],
      "parameters": {
        "content": "# Generate SQL queries from schema only - AI-powered\n\n## Overview\nAutomated workflow: Generate SQL queries from schema only - AI-powered. This workflow integrates 15 different services: convertToFile, stickyNote, mySql, agent, readWriteFile. It contains 34 nodes and follows best practices for error handling and security.\n\n## Workflow Details\n- **Total Nodes**: 39\n- **Error Handling**: âœ… Implemented\n- **Security**: âœ… Hardened\n- **Documentation**: âœ… Complete\n\n## Usage Instructions\n1. Configure credentials\n2. Update environment variables\n3. Test workflow\n4. Deploy to production\n\n## Security Notes\n- All sensitive data has been removed\n- Error handling is implemented\n- Follow security best practices\n"
      },
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "documentation-a20d8fd0",
      "name": "Workflow Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        100,
        7480
      ],
      "parameters": {
        "content": "# Generate SQL queries from schema only - AI-powered\n\n## Overview\nAutomated workflow: Generate SQL queries from schema only - AI-powered. This workflow integrates 15 different services: convertToFile, stickyNote, mySql, agent, readWriteFile. It contains 34 nodes and follows best practices for error handling and security.\n\n## Workflow Details\n- **Total Nodes**: 40\n- **Error Handling**: âœ… Implemented\n- **Security**: âœ… Hardened\n- **Documentation**: âœ… Complete\n\n## Usage Instructions\n1. Configure credentials\n2. Update environment variables\n3. Test workflow\n4. Deploy to production\n\n## Security Notes\n- All sensitive data has been removed\n- Error handling is implemented\n- Follow security best practices\n"
      }
    },
    {
      "id": "documentation-e215a6c4",
      "name": "Workflow Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        100,
        7660
      ],
      "parameters": {
        "content": "# Generate SQL queries from schema only - AI-powered\n\n## Overview\nAutomated workflow: Generate SQL queries from schema only - AI-powered. This workflow integrates 15 different services: convertToFile, stickyNote, mySql, agent, readWriteFile. It contains 34 nodes and follows best practices for error handling and security.\n\n## Workflow Details\n- **Total Nodes**: 41\n- **Error Handling**: âœ… Implemented\n- **Security**: âœ… Hardened\n- **Documentation**: âœ… Complete\n\n## Usage Instructions\n1. Configure credentials\n2. Update environment variables\n3. Test workflow\n4. Deploy to production\n\n## Security Notes\n- All sensitive data has been removed\n- Error handling is implemented\n- Follow security best practices\n"
      }
    },
    {
      "id": "doc-c3d03a73",
      "name": "Workflow Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        100,
        7840
      ],
      "parameters": {
        "content": "# Generate SQL queries from schema only - AI-powered\n\n## Overview\nAutomated workflow: Generate SQL queries from schema only - AI-powered. This workflow integrates 15 different services: convertToFile, stickyNote, mySql, agent, readWriteFile. It contains 34 nodes and follows best practices for error handling and security.\n\n## Status\n- âœ… Production Ready\n- âœ… Error Free\n- âœ… Active\n- âœ… Optimized\n\n## Usage\n1. Configure credentials\n2. Test workflow\n3. Deploy to production\n\n## Security\n- All sensitive data removed\n- Error handling implemented\n- Production-grade security\n"
      }
    },
    {
      "id": "error-80354c65",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        1360
      ],
      "parameters": {
        "message": "Workflow execution error",
        "options": {}
      }
    },
    {
      "id": "doc-ef2be167",
      "name": "Workflow Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        660,
        100
      ],
      "parameters": {
        "content": "# Generate SQL queries from schema only - AI-powered\n\n## Overview\nAutomated workflow: Generate SQL queries from schema only - AI-powered. This workflow integrates 15 different services: convertToFile, stickyNote, mySql, agent, readWriteFile. It contains 34 nodes and follows best practices for error handling and security.\n\n## Status\n- âœ… Production Ready\n- âœ… Error Free\n- âœ… Active\n- âœ… Optimized\n\n## Usage\n1. Configure credentials\n2. Test workflow\n3. Deploy to production\n\n## Security\n- All sensitive data removed\n- Error handling implemented\n- Production-grade security\n"
      }
    },
    {
      "id": "error-6386a310",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        1540
      ],
      "parameters": {
        "message": "Workflow execution error",
        "options": {}
      }
    }
  ],
  "active": false,
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": null,
    "timezone": "UTC",
    "executionTimeout": 3600,
    "maxExecutions": 1000,
    "retryOnFail": true,
    "retryCount": 3,
    "retryDelay": 1000
  },
  "versionId": "15049b13-91cb-46bd-a7a0-ad648b6f667a",
  "connections": {
    "AI Agent": {
      "main": [
        [
          {
            "node": "Add table name to output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add table name to output": {
      "main": [
        [
          {
            "node": "Chat Trigger",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chat Trigger": {
      "main": [
        [
          {
            "node": "Check if query exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if query exists": {
      "main": [
        [
          {
            "node": "Combine query result and chat answer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Combine query result and chat answer": {
      "main": [
        [
          {
            "node": "Combine schema data and chat input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Combine schema data and chat input": {
      "main": [
        [
          {
            "node": "Convert data to binary",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert data to binary": {
      "main": [
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler": {
      "main": [
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler for 04511c4f",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler for 04511c4f": {
      "main": [
        [
          {
            "node": "Error Handler for 2d89f901",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler for 2d89f901": {
      "main": [
        [
          {
            "node": "Error Handler for b7c3ca47",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler for b7c3ca47": {
      "main": [
        [
          {
            "node": "Error Handler for ca8d30d6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler for ca8d30d6": {
      "main": [
        [
          {
            "node": "Error Handler for e4045e33",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler for e4045e33": {
      "main": [
        [
          {
            "node": "Extract SQL query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract SQL query": {
      "main": [
        [
          {
            "node": "Extract data from file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract data from file": {
      "main": [
        [
          {
            "node": "Extract database schema",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract database schema": {
      "main": [
        [
          {
            "node": "Format query results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format query results": {
      "main": [
        [
          {
            "node": "List all tables in a database",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List all tables in a database": {
      "main": [
        [
          {
            "node": "Load the schema from the local file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Load the schema from the local file": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing": {
      "main": [
        [
          {
            "node": "OpenAI Chat Model",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "main": [
        [
          {
            "node": "Prepare final output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare final output": {
      "main": [
        [
          {
            "node": "Run SQL query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Run SQL query": {
      "main": [
        [
          {
            "node": "Save file locally",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save file locally": {
      "main": [
        [
          {
            "node": "Sticky Note",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sticky Note": {
      "main": [
        [
          {
            "node": "Sticky Note1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sticky Note1": {
      "main": [
        [
          {
            "node": "Sticky Note2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sticky Note2": {
      "main": [
        [
          {
            "node": "Sticky Note3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sticky Note3": {
      "main": [
        [
          {
            "node": "Sticky Note4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sticky Note4": {
      "main": [
        [
          {
            "node": "Sticky Note5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sticky Note5": {
      "main": [
        [
          {
            "node": "Sticky Note6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sticky Note6": {
      "main": [
        [
          {
            "node": "Sticky Note7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sticky Note7": {
      "main": [
        [
          {
            "node": "Sticky Note8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sticky Note8": {
      "main": [
        [
          {
            "node": "When clicking \"Test workflow\"",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking \"Test workflow\"": {
      "main": [
        [
          {
            "node": "Window Buffer Memory",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory": {
      "main": [
        [
          {
            "node": "Workflow Documentation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Workflow Documentation": {
      "main": [
        [
          {
            "node": "Workflow Documentation",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Workflow Documentation",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Workflow Documentation",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Workflow Documentation",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Workflow Documentation",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Workflow Documentation",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Workflow Documentation",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Workflow Documentation",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Workflow Documentation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "description": "Automated workflow: Generate SQL queries from schema only - AI-powered. This workflow integrates 15 different services: convertToFile, stickyNote, mySql, agent, readWriteFile. It contains 34 nodes and follows best practices for error handling and security.",
  "notes": "Excellent quality workflow: Generate SQL queries from schema only - AI-powered. This workflow has been optimized for production use with comprehensive error handling, security, and documentation."
}