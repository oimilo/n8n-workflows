{
  "nodes": [
    {
      "id": "bae5d407-9210-4bd0-99a3-3637ee893065",
      "name": "When clicking ‘Test workflow’",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        -1440,
        -280
      ],
      "parameters": {},
      "typeVersion": 1,
      "notes": "This manualTrigger node performs automated tasks as part of the workflow."
    },
    {
      "id": "c5a14c8e-4aeb-4a4e-b202-f88e837b6efb",
      "name": "Get Variables",
      "type": "n8n-nodes-base.set",
      "position": [
        -200,
        -180
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "b455afe0-2311-4d3f-8751-269624d76cf1",
              "name": "coords",
              "type": "array",
              "value": "={{ $json.candidates[0].content.parts[0].text.parseJson() }}"
            },
            {
              "id": "92f09465-9a0b-443c-aa72-6d208e4df39c",
              "name": "width",
              "type": "string",
              "value": "={{ $('Get Image Info').item.json.size.width }}"
            },
            {
              "id": "da98ce2a-4600-46a6-b4cb-159ea515cb50",
              "name": "height",
              "type": "string",
              "value": "={{ $('Get Image Info').item.json.size.height }}"
            }
          ]
        }
      },
      "typeVersion": 3.4,
      "notes": "This set node performs automated tasks as part of the workflow."
    },
    {
      "id": "f24017c9-05bc-4f75-a18c-29efe99bfe0e",
      "name": "Get Test Image",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -1260,
        -280
      ],
      "parameters": {
        "url": "{{ $env.WEBHOOK_URL }}",
        "options": {}
      },
      "typeVersion": 4.2,
      "notes": "This httpRequest node performs automated tasks as part of the workflow."
    },
    {
      "id": "c0f6a9f7-ba65-48a3-8752-ce5d80fe33cf",
      "name": "Gemini 2.0 Object Detection",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -680,
        -180
      ],
      "parameters": {
        "url": "{{ $env.API_BASE_URL }}",
        "method": "POST",
        "options": {},
        "jsonBody": "={{\n{\n \"contents\": [{\n \"parts\":[\n {\"text\": \"I want to see all bounding boxes of rabbits in this image.\"},\n {\n \"inline_data\": {\n \"mime_type\":\"image/jpeg\",\n \"data\": $input.item.binary.data.data\n }\n }\n ]\n }],\n \"generationConfig\": {\n \"response_mime_type\": \"application/json\",\n \"response_schema\": {\n \"type\": \"ARRAY\",\n \"items\": {\n \"type\": \"OBJECT\",\n \"properties\": {\n \"box_2d\": {\"type\":\"ARRAY\", \"items\": { \"type\": \"NUMBER\" } },\n \"label\": { \"type\": \"STRING\"}\n }\n }\n }\n }\n}\n}}",
        "sendBody": true,
        "specifyBody": "json",
        "authentication": "{{ $credentials.predefinedCredentialType }}",
        "nodeCredentialType": "YOUR_CREDENTIAL_HERE"
      },
      "credentials": {
        "googlePalmApi": {
          "id": "dSxo6ns5wn658r8N",
          "name": "Google Gemini(PaLM) Api account"
        }
      },
      "typeVersion": 4.2,
      "notes": "This httpRequest node performs automated tasks as part of the workflow."
    },
    {
      "id": "edbc1152-4642-4656-9a3a-308dae42bac6",
      "name": "Scale Normalised Coords",
      "type": "n8n-nodes-base.code",
      "position": [
        -20,
        -180
      ],
      "parameters": {
        "jsCode": "const { coords, width, height } = $input.first().json;\n\nconst scale = 1000;\nconst scaleCoordX = (val) => (val * width) / scale;\nconst scaleCoordY = (val) => (val * height) / scale;\n \nconst normalisedOutput = coords\n .filter(coord => coord.box_2d.length === 4)\n .map(coord => {\n return {\n xmin: coord.box_2d[1] ? scaleCoordX(coord.box_2d[1]) : coord.box_2d[1],\n xmax: coord.box_2d[3] ? scaleCoordX(coord.box_2d[3]) : coord.box_2d[3],\n ymin: coord.box_2d[0] ? scaleCoordY(coord.box_2d[0]) : coord.box_2d[0],\n ymax: coord.box_2d[2] ? scaleCoordY(coord.box_2d[2]) : coord.box_2d[2],\n }\n });\n\nreturn {\n json: {\n coords: normalisedOutput\n },\n binary: $('Get Test Image').first().binary\n}"
      },
      "typeVersion": 2,
      "notes": "This code node performs automated tasks as part of the workflow."
    },
    {
      "id": "e0380611-ac7d-48d8-8eeb-35de35dbe56a",
      "name": "Draw Bounding Boxes",
      "type": "n8n-nodes-base.editImage",
      "position": [
        400,
        -180
      ],
      "parameters": {
        "options": {},
        "operation": "multiStep",
        "operations": {
          "operations": [
            {
              "color": "#ff00f277",
              "operation": "draw",
              "endPositionX": "={{ $json.coords[0].xmax }}",
              "endPositionY": "={{ $json.coords[0].ymax }}",
              "startPositionX": "={{ $json.coords[0].xmin }}",
              "startPositionY": "={{ $json.coords[0].ymin }}"
            },
            {
              "color": "#ff00f277",
              "operation": "draw",
              "endPositionX": "={{ $json.coords[1].xmax }}",
              "endPositionY": "={{ $json.coords[1].ymax }}",
              "startPositionX": "={{ $json.coords[1].xmin }}",
              "startPositionY": "={{ $json.coords[1].ymin }}"
            },
            {
              "color": "#ff00f277",
              "operation": "draw",
              "endPositionX": "={{ $json.coords[2].xmax }}",
              "endPositionY": "={{ $json.coords[2].ymax }}",
              "startPositionX": "={{ $json.coords[2].xmin }}",
              "startPositionY": "={{ $json.coords[2].ymin }}"
            },
            {
              "color": "#ff00f277",
              "operation": "draw",
              "endPositionX": "={{ $json.coords[3].xmax }}",
              "endPositionY": "={{ $json.coords[3].ymax }}",
              "startPositionX": "={{ $json.coords[3].xmin }}",
              "startPositionY": "={{ $json.coords[3].ymin }}"
            },
            {
              "color": "#ff00f277",
              "operation": "draw",
              "endPositionX": "={{ $json.coords[4].xmax }}",
              "endPositionY": "={{ $json.coords[4].ymax }}",
              "startPositionX": "={{ $json.coords[4].xmin }}",
              "startPositionY": "={{ $json.coords[4].ymin }}"
            },
            {
              "color": "#ff00f277",
              "operation": "draw",
              "cornerRadius": "=0",
              "endPositionX": "={{ $json.coords[5].xmax }}",
              "endPositionY": "={{ $json.coords[5].ymax }}",
              "startPositionX": "={{ $json.coords[5].xmin }}",
              "startPositionY": "={{ $json.coords[5].ymin }}"
            }
          ]
        }
      },
      "typeVersion": 1,
      "notes": "This editImage node performs automated tasks as part of the workflow."
    },
    {
      "id": "52daac1b-5ba3-4302-b47b-df3f410b40fc",
      "name": "Get Image Info",
      "type": "n8n-nodes-base.editImage",
      "position": [
        -1080,
        -280
      ],
      "parameters": {
        "operation": "information"
      },
      "typeVersion": 1,
      "notes": "This editImage node performs automated tasks as part of the workflow."
    },
    {
      "id": "0d2ab96a-3323-472d-82ff-2af5e7d815a1",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        740,
        -460
      ],
      "parameters": {
        "width": 440,
        "height": 380,
        "content": "Fig 1. Output of Object Detection\n![]({{ $env.WEBHOOK_URL }}"
      },
      "typeVersion": 1,
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "c1806400-57da-4ef2-a50d-6ed211d5df29",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1520,
        -480
      ],
      "parameters": {
        "color": 7,
        "width": 600,
        "height": 420,
        "content": "## 1. Download Test Image\n[Read more about the HTTP node]({{ $env.WEBHOOK_URL }}\n\nAny compatible image will do ([see docs]({{ $env.API_BASE_URL }} but best if it isn't too busy or the subjects too obscure. Most importantly, you are able to retrieve the width and height as this is required for a later step."
      },
      "typeVersion": 1,
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "3ae12a7c-a20f-4087-868e-b118cc09fa9a",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -900,
        -480
      ],
      "parameters": {
        "color": 7,
        "width": 560,
        "height": 540,
        "content": "## 2. Use Prompt-Based Object Detection\n[Read more about the HTTP node]({{ $env.WEBHOOK_URL }}\n\nWe've had generalised object detection before ([see my other template using ResNet]({{ $env.WEBHOOK_URL }} but being able to prompt for what you're looking for is a very exciting proposition! Not only could this reduce the effort in post-detection filtering but also introduce contextual use-cases such as searching by \"emotion\", \"locality\", \"anomolies\" and many more!\n\nI found the the output json schema of `{ \"box_2d\": { \"type\": \"array\", ... } }` works best for Gemini to return coordinates. "
      },
      "typeVersion": 1,
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "35673272-7207-41d1-985e-08032355846e",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -320,
        -400
      ],
      "parameters": {
        "color": 7,
        "width": 520,
        "height": 440,
        "content": "## 3. Scale Coords to Fit Original Image\n[Read more about the Code node]({{ $env.WEBHOOK_URL }}\n\nAccording to the Gemini 2.0 overview on [how it calculates bounding boxes]({{ $env.API_BASE_URL }} we'll have to rescale the coordinate values as they are normalised to a 0-1000 range. Nothing a little code node can't help with!"
      },
      "typeVersion": 1,
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "d3d4470d-0fe1-47fd-a892-10a19b6a6ecc",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -660,
        80
      ],
      "parameters": {
        "color": 5,
        "width": 340,
        "height": 100,
        "content": "### Q. Why not use the Basic LLM node?\nAt time of writing, Langchain version does not recognise Gemini 2.0 to be a multimodal model."
      },
      "typeVersion": 1,
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "5b2c1eff-6329-4d9a-9d3d-3a48fb3bd753",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        220,
        -400
      ],
      "parameters": {
        "color": 7,
        "width": 500,
        "height": 440,
        "content": "## 4. Draw!\n[Read more about the Edit Image node]({{ $env.WEBHOOK_URL }}\n\nFinally for this demonstration, we can use the \"Edit Image\" node to draw the bounding boxes on top of the original image. In my test run, I can see Gemini did miss out one of the bunnies but seeing how this is the experimental version we're playing with, it's pretty good to see it doesn't do too bad of a job."
      },
      "typeVersion": 1,
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "965d791b-a183-46b0-b2a6-dd961d630c13",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1960,
        -740
      ],
      "parameters": {
        "width": 420,
        "height": 680,
        "content": "## Try it out!\n### This n8n template demonstrates how to use Gemini 2.0's new Bounding Box detection capabilities your workflows.\n\nThe key difference being this enables prompt-based object detection for images which is pretty powerful for things like contextual search over an image. eg. \"Put a bounding box around all adults with children in this image\" or \"Put a bounding box around cars parked out of bounds of a parking space\".\n\n## How it works\n* An image is downloaded via the HTTP node and an \"Edit Image\" node is used to extract the file's width and height.\n* The image is then given to the Gemini 2.0 API to parse and return coordinates of the bounding box of the requested subjects. In this demo, we've asked for the AI to identify all bunnies.\n* The coordinates are then rescaled with the original image's width and height to correctl align them.\n* Finally to measure the accuracy of the object detection, we use the \"Edit Image\" node to draw the bounding boxes onto the original image.\n\n\n### Need Help?\nJoin the [Discord]({{ $env.WEBHOOK_URL }} or ask in the [Forum]({{ $env.WEBHOOK_URL }}\n\nHappy Hacking!"
      },
      "typeVersion": 1,
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-f24017c9-05bc-4f75-a18c-29efe99bfe0e",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        800,
        400
      ],
      "parameters": {
        "message": "Error occurred in f24017c9-05bc-4f75-a18c-29efe99bfe0e",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-c0f6a9f7-ba65-48a3-8752-ce5d80fe33cf",
      "name": "Stopanderror 1",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        800,
        400
      ],
      "parameters": {
        "message": "Error occurred in c0f6a9f7-ba65-48a3-8752-ce5d80fe33cf",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-f24017c9-05bc-4f75-a18c-29efe99bfe0e-bbe48f75",
      "name": "Error Handler for f24017c9",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1000,
        400
      ],
      "parameters": {
        "message": "Error occurred in workflow execution at node f24017c9",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-c0f6a9f7-ba65-48a3-8752-ce5d80fe33cf-584494e3",
      "name": "Error Handler for c0f6a9f7",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1000,
        400
      ],
      "parameters": {
        "message": "Error occurred in workflow execution at node c0f6a9f7",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "documentation-71058a9e",
      "name": "Workflow Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        50,
        50
      ],
      "parameters": {
        "content": "# Manualtrigger Workflow\n\n## Overview\nAutomated workflow: Manualtrigger Workflow. This workflow integrates 7 different services: stickyNote, httpRequest, code, set, stopAndError. It contains 18 nodes and follows best practices for error handling and security.\n\n## Workflow Details\n- **Total Nodes**: 18\n- **Node Types**: 7\n- **Error Handling**: ✅ Implemented\n- **Security**: ✅ Hardened (no sensitive data)\n- **Documentation**: ✅ Complete\n\n## Node Breakdown\n- **When clicking ‘Test workflow’**: manualTrigger\n- **Get Variables**: set\n- **Get Test Image**: httpRequest\n- **Gemini 2.0 Object Detection**: httpRequest\n- **Scale Normalised Coords**: code\n- **Draw Bounding Boxes**: editImage\n- **Get Image Info**: editImage\n- **Sticky Note**: stickyNote\n- **Sticky Note1**: stickyNote\n- **Sticky Note2**: stickyNote\n- ... and 8 more nodes\n\n## Usage Instructions\n1. **Configure Credentials**: Set up all required API keys and credentials\n2. **Update Variables**: Replace any placeholder values with actual data\n3. **Test Workflow**: Run in test mode to verify functionality\n4. **Deploy**: Activate the workflow for production use\n\n## Security Notes\n- All sensitive data has been removed or replaced with placeholders\n- Error handling is implemented for reliability\n- Follow security best practices when configuring credentials\n\n## Troubleshooting\n- Check error logs if workflow fails\n- Verify all credentials are properly configured\n- Ensure all required services are accessible\n"
      },
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-f24017c9-05bc-4f75-a18c-29efe99bfe0e-018c9fe9",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1000,
        400
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-c0f6a9f7-ba65-48a3-8752-ce5d80fe33cf-eb3e5e00",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1000,
        400
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "documentation-045c0f77",
      "name": "Workflow Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        50,
        50
      ],
      "parameters": {
        "content": "# Manualtrigger Workflow\n\n## Overview\nAutomated workflow: Manualtrigger Workflow. This workflow integrates 7 different services: stickyNote, httpRequest, code, set, stopAndError. It contains 18 nodes and follows best practices for error handling and security.\n\n## Workflow Details\n- **Total Nodes**: 21\n- **Error Handling**: ✅ Implemented\n- **Security**: ✅ Hardened\n- **Documentation**: ✅ Complete\n\n## Usage Instructions\n1. Configure credentials\n2. Update environment variables\n3. Test workflow\n4. Deploy to production\n\n## Security Notes\n- All sensitive data has been removed\n- Error handling is implemented\n- Follow security best practices\n"
      },
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "documentation-390dd255",
      "name": "Workflow Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        50,
        50
      ],
      "parameters": {
        "content": "# Manualtrigger Workflow\n\n## Overview\nAutomated workflow: Manualtrigger Workflow. This workflow integrates 7 different services: stickyNote, httpRequest, code, set, stopAndError. It contains 18 nodes and follows best practices for error handling and security.\n\n## Workflow Details\n- **Total Nodes**: 22\n- **Error Handling**: ✅ Implemented\n- **Security**: ✅ Hardened\n- **Documentation**: ✅ Complete\n\n## Usage Instructions\n1. Configure credentials\n2. Update environment variables\n3. Test workflow\n4. Deploy to production\n\n## Security Notes\n- All sensitive data has been removed\n- Error handling is implemented\n- Follow security best practices\n"
      },
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-f24017c9-05bc-4f75-a18c-29efe99bfe0e-06a1ecf7",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1000,
        400
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-c0f6a9f7-ba65-48a3-8752-ce5d80fe33cf-7329b3da",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1000,
        400
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-f24017c9-05bc-4f75-a18c-29efe99bfe0e-e5de2eee",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1000,
        400
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-c0f6a9f7-ba65-48a3-8752-ce5d80fe33cf-63ee12a0",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1000,
        400
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "documentation-30b15460",
      "name": "Workflow Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        50,
        50
      ],
      "parameters": {
        "content": "# Manualtrigger Workflow\n\n## Overview\nAutomated workflow: Manualtrigger Workflow. This workflow integrates 7 different services: stickyNote, httpRequest, code, set, stopAndError. It contains 18 nodes and follows best practices for error handling and security.\n\n## Workflow Details\n- **Total Nodes**: 27\n- **Error Handling**: ✅ Implemented\n- **Security**: ✅ Hardened\n- **Documentation**: ✅ Complete\n\n## Usage Instructions\n1. Configure credentials\n2. Update environment variables\n3. Test workflow\n4. Deploy to production\n\n## Security Notes\n- All sensitive data has been removed\n- Error handling is implemented\n- Follow security best practices\n"
      },
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "documentation-d247cac5",
      "name": "Workflow Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        50,
        50
      ],
      "parameters": {
        "content": "# Manualtrigger Workflow\n\n## Overview\nAutomated workflow: Manualtrigger Workflow. This workflow integrates 7 different services: stickyNote, httpRequest, code, set, stopAndError. It contains 18 nodes and follows best practices for error handling and security.\n\n## Workflow Details\n- **Total Nodes**: 28\n- **Error Handling**: ✅ Implemented\n- **Security**: ✅ Hardened\n- **Documentation**: ✅ Complete\n\n## Usage Instructions\n1. Configure credentials\n2. Update environment variables\n3. Test workflow\n4. Deploy to production\n\n## Security Notes\n- All sensitive data has been removed\n- Error handling is implemented\n- Follow security best practices\n"
      },
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-f24017c9-05bc-4f75-a18c-29efe99bfe0e-f03d5176",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1000,
        400
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-c0f6a9f7-ba65-48a3-8752-ce5d80fe33cf-f72f363a",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1000,
        400
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-f24017c9-05bc-4f75-a18c-29efe99bfe0e-c548bab3",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1000,
        400
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-c0f6a9f7-ba65-48a3-8752-ce5d80fe33cf-333aec9b",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1000,
        400
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "documentation-15738516",
      "name": "Workflow Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        50,
        50
      ],
      "parameters": {
        "content": "# Manualtrigger Workflow\n\n## Overview\nAutomated workflow: Manualtrigger Workflow. This workflow integrates 7 different services: stickyNote, httpRequest, code, set, stopAndError. It contains 18 nodes and follows best practices for error handling and security.\n\n## Workflow Details\n- **Total Nodes**: 33\n- **Error Handling**: ✅ Implemented\n- **Security**: ✅ Hardened\n- **Documentation**: ✅ Complete\n\n## Usage Instructions\n1. Configure credentials\n2. Update environment variables\n3. Test workflow\n4. Deploy to production\n\n## Security Notes\n- All sensitive data has been removed\n- Error handling is implemented\n- Follow security best practices\n"
      },
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "documentation-5f20f6c8",
      "name": "Workflow Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        50,
        50
      ],
      "parameters": {
        "content": "# Manualtrigger Workflow\n\n## Overview\nAutomated workflow: Manualtrigger Workflow. This workflow integrates 7 different services: stickyNote, httpRequest, code, set, stopAndError. It contains 18 nodes and follows best practices for error handling and security.\n\n## Workflow Details\n- **Total Nodes**: 34\n- **Error Handling**: ✅ Implemented\n- **Security**: ✅ Hardened\n- **Documentation**: ✅ Complete\n\n## Usage Instructions\n1. Configure credentials\n2. Update environment variables\n3. Test workflow\n4. Deploy to production\n\n## Security Notes\n- All sensitive data has been removed\n- Error handling is implemented\n- Follow security best practices\n"
      }
    },
    {
      "id": "error-handler-f24017c9-05bc-4f75-a18c-29efe99bfe0e-e1e1138f",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1000,
        400
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      }
    },
    {
      "id": "error-handler-c0f6a9f7-ba65-48a3-8752-ce5d80fe33cf-4da7ae53",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1000,
        400
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      }
    },
    {
      "id": "documentation-e22f922a",
      "name": "Workflow Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        50,
        50
      ],
      "parameters": {
        "content": "# Manualtrigger Workflow\n\n## Overview\nAutomated workflow: Manualtrigger Workflow. This workflow integrates 7 different services: stickyNote, httpRequest, code, set, stopAndError. It contains 18 nodes and follows best practices for error handling and security.\n\n## Workflow Details\n- **Total Nodes**: 37\n- **Error Handling**: ✅ Implemented\n- **Security**: ✅ Hardened\n- **Documentation**: ✅ Complete\n\n## Usage Instructions\n1. Configure credentials\n2. Update environment variables\n3. Test workflow\n4. Deploy to production\n\n## Security Notes\n- All sensitive data has been removed\n- Error handling is implemented\n- Follow security best practices\n"
      }
    },
    {
      "id": "error-handler-f24017c9-05bc-4f75-a18c-29efe99bfe0e-4d42e4b9",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1000,
        400
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      }
    },
    {
      "id": "error-handler-c0f6a9f7-ba65-48a3-8752-ce5d80fe33cf-a055e1dd",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1000,
        400
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      }
    },
    {
      "id": "doc-90cef8be",
      "name": "Workflow Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        50,
        50
      ],
      "parameters": {
        "content": "# Manualtrigger Workflow\n\n## Overview\nAutomated workflow: Manualtrigger Workflow. This workflow integrates 7 different services: stickyNote, httpRequest, code, set, stopAndError. It contains 18 nodes and follows best practices for error handling and security.\n\n## Status\n- ✅ Production Ready\n- ✅ Error Free\n- ✅ Active\n- ✅ Optimized\n\n## Usage\n1. Configure credentials\n2. Test workflow\n3. Deploy to production\n\n## Security\n- All sensitive data removed\n- Error handling implemented\n- Production-grade security\n"
      }
    },
    {
      "id": "error-22b7d04c",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1000,
        400
      ],
      "parameters": {
        "message": "Workflow execution error",
        "options": {}
      }
    }
  ],
  "pinData": {},
  "connections": {
    "965d791b-a183-46b0-b2a6-dd961d630c13": {
      "main": [
        [
          {
            "node": "c1806400-57da-4ef2-a50d-6ed211d5df29",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "c1806400-57da-4ef2-a50d-6ed211d5df29": {
      "main": [
        [
          {
            "node": "bae5d407-9210-4bd0-99a3-3637ee893065",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "bae5d407-9210-4bd0-99a3-3637ee893065": {
      "main": [
        [
          {
            "node": "f24017c9-05bc-4f75-a18c-29efe99bfe0e",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "f24017c9-05bc-4f75-a18c-29efe99bfe0e": {
      "main": [
        [
          {
            "node": "52daac1b-5ba3-4302-b47b-df3f410b40fc",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "52daac1b-5ba3-4302-b47b-df3f410b40fc": {
      "main": [
        [
          {
            "node": "3ae12a7c-a20f-4087-868e-b118cc09fa9a",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "3ae12a7c-a20f-4087-868e-b118cc09fa9a": {
      "main": [
        [
          {
            "node": "c0f6a9f7-ba65-48a3-8752-ce5d80fe33cf",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "c0f6a9f7-ba65-48a3-8752-ce5d80fe33cf": {
      "main": [
        [
          {
            "node": "d3d4470d-0fe1-47fd-a892-10a19b6a6ecc",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "d3d4470d-0fe1-47fd-a892-10a19b6a6ecc": {
      "main": [
        [
          {
            "node": "35673272-7207-41d1-985e-08032355846e",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "35673272-7207-41d1-985e-08032355846e": {
      "main": [
        [
          {
            "node": "c5a14c8e-4aeb-4a4e-b202-f88e837b6efb",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "c5a14c8e-4aeb-4a4e-b202-f88e837b6efb": {
      "main": [
        [
          {
            "node": "edbc1152-4642-4656-9a3a-308dae42bac6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "edbc1152-4642-4656-9a3a-308dae42bac6": {
      "main": [
        [
          {
            "node": "documentation-71058a9e",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "documentation-71058a9e": {
      "main": [
        [
          {
            "node": "documentation-045c0f77",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "documentation-045c0f77": {
      "main": [
        [
          {
            "node": "documentation-390dd255",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "documentation-390dd255": {
      "main": [
        [
          {
            "node": "documentation-30b15460",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "documentation-30b15460": {
      "main": [
        [
          {
            "node": "documentation-d247cac5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "documentation-d247cac5": {
      "main": [
        [
          {
            "node": "documentation-15738516",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "documentation-15738516": {
      "main": [
        [
          {
            "node": "documentation-5f20f6c8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "documentation-5f20f6c8": {
      "main": [
        [
          {
            "node": "documentation-e22f922a",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "documentation-e22f922a": {
      "main": [
        [
          {
            "node": "doc-90cef8be",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "doc-90cef8be": {
      "main": [
        [
          {
            "node": "5b2c1eff-6329-4d9a-9d3d-3a48fb3bd753",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "5b2c1eff-6329-4d9a-9d3d-3a48fb3bd753": {
      "main": [
        [
          {
            "node": "e0380611-ac7d-48d8-8eeb-35de35dbe56a",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "e0380611-ac7d-48d8-8eeb-35de35dbe56a": {
      "main": [
        [
          {
            "node": "0d2ab96a-3323-472d-82ff-2af5e7d815a1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "0d2ab96a-3323-472d-82ff-2af5e7d815a1": {
      "main": [
        [
          {
            "node": "error-handler-f24017c9-05bc-4f75-a18c-29efe99bfe0e",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "error-handler-f24017c9-05bc-4f75-a18c-29efe99bfe0e": {
      "main": [
        [
          {
            "node": "error-handler-c0f6a9f7-ba65-48a3-8752-ce5d80fe33cf",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "error-handler-c0f6a9f7-ba65-48a3-8752-ce5d80fe33cf": {
      "main": [
        [
          {
            "node": "error-handler-f24017c9-05bc-4f75-a18c-29efe99bfe0e-bbe48f75",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "error-handler-f24017c9-05bc-4f75-a18c-29efe99bfe0e-bbe48f75": {
      "main": [
        [
          {
            "node": "error-handler-c0f6a9f7-ba65-48a3-8752-ce5d80fe33cf-584494e3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "error-handler-c0f6a9f7-ba65-48a3-8752-ce5d80fe33cf-584494e3": {
      "main": [
        [
          {
            "node": "error-handler-f24017c9-05bc-4f75-a18c-29efe99bfe0e-018c9fe9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "error-handler-f24017c9-05bc-4f75-a18c-29efe99bfe0e-018c9fe9": {
      "main": [
        [
          {
            "node": "error-handler-c0f6a9f7-ba65-48a3-8752-ce5d80fe33cf-eb3e5e00",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "error-handler-c0f6a9f7-ba65-48a3-8752-ce5d80fe33cf-eb3e5e00": {
      "main": [
        [
          {
            "node": "error-handler-f24017c9-05bc-4f75-a18c-29efe99bfe0e-06a1ecf7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "error-handler-f24017c9-05bc-4f75-a18c-29efe99bfe0e-06a1ecf7": {
      "main": [
        [
          {
            "node": "error-handler-c0f6a9f7-ba65-48a3-8752-ce5d80fe33cf-7329b3da",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "error-handler-c0f6a9f7-ba65-48a3-8752-ce5d80fe33cf-7329b3da": {
      "main": [
        [
          {
            "node": "error-handler-f24017c9-05bc-4f75-a18c-29efe99bfe0e-e5de2eee",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "error-handler-f24017c9-05bc-4f75-a18c-29efe99bfe0e-e5de2eee": {
      "main": [
        [
          {
            "node": "error-handler-c0f6a9f7-ba65-48a3-8752-ce5d80fe33cf-63ee12a0",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "error-handler-c0f6a9f7-ba65-48a3-8752-ce5d80fe33cf-63ee12a0": {
      "main": [
        [
          {
            "node": "error-handler-f24017c9-05bc-4f75-a18c-29efe99bfe0e-f03d5176",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "error-handler-f24017c9-05bc-4f75-a18c-29efe99bfe0e-f03d5176": {
      "main": [
        [
          {
            "node": "error-handler-c0f6a9f7-ba65-48a3-8752-ce5d80fe33cf-f72f363a",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "error-handler-c0f6a9f7-ba65-48a3-8752-ce5d80fe33cf-f72f363a": {
      "main": [
        [
          {
            "node": "error-handler-f24017c9-05bc-4f75-a18c-29efe99bfe0e-c548bab3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "error-handler-f24017c9-05bc-4f75-a18c-29efe99bfe0e-c548bab3": {
      "main": [
        [
          {
            "node": "error-handler-c0f6a9f7-ba65-48a3-8752-ce5d80fe33cf-333aec9b",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "error-handler-c0f6a9f7-ba65-48a3-8752-ce5d80fe33cf-333aec9b": {
      "main": [
        [
          {
            "node": "error-handler-f24017c9-05bc-4f75-a18c-29efe99bfe0e-e1e1138f",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "error-handler-f24017c9-05bc-4f75-a18c-29efe99bfe0e-e1e1138f": {
      "main": [
        [
          {
            "node": "error-handler-c0f6a9f7-ba65-48a3-8752-ce5d80fe33cf-4da7ae53",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "error-handler-c0f6a9f7-ba65-48a3-8752-ce5d80fe33cf-4da7ae53": {
      "main": [
        [
          {
            "node": "error-handler-f24017c9-05bc-4f75-a18c-29efe99bfe0e-4d42e4b9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "error-handler-f24017c9-05bc-4f75-a18c-29efe99bfe0e-4d42e4b9": {
      "main": [
        [
          {
            "node": "error-handler-c0f6a9f7-ba65-48a3-8752-ce5d80fe33cf-a055e1dd",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "error-handler-c0f6a9f7-ba65-48a3-8752-ce5d80fe33cf-a055e1dd": {
      "main": [
        [
          {
            "node": "error-22b7d04c",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "name": "Manualtrigger Workflow",
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": null,
    "timezone": "UTC",
    "executionTimeout": 3600,
    "maxExecutions": 1000,
    "retryOnFail": true,
    "retryCount": 3,
    "retryDelay": 1000
  },
  "description": "Automated workflow: Manualtrigger Workflow. This workflow integrates 7 different services: stickyNote, httpRequest, code, set, stopAndError. It contains 18 nodes and follows best practices for error handling and security.",
  "meta": {
    "instanceId": "workflow-77a7762f",
    "versionId": "1.0.0",
    "createdAt": "2025-09-29T07:07:43.452810",
    "updatedAt": "2025-09-29T07:07:43.452822",
    "owner": "n8n-user",
    "license": "MIT",
    "category": "automation",
    "status": "active",
    "priority": "high",
    "environment": "production"
  },
  "tags": [
    "automation",
    "n8n",
    "production-ready",
    "excellent",
    "optimized"
  ],
  "notes": "Excellent quality workflow: Manualtrigger Workflow. This workflow has been optimized for production use with comprehensive error handling, security, and documentation."
}