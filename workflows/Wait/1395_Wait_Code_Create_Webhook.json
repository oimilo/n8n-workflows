{
  "id": "MfKB97VVSuXMo3Fm",
  "meta": {
    "instanceId": "workflow-f4d78bf6",
    "versionId": "1.0.0",
    "createdAt": "2025-10-05T19:16:48.516111",
    "updatedAt": "2025-10-05T19:16:48.516113",
    "owner": "n8n-user",
    "license": "MIT",
    "category": "automation",
    "status": "active",
    "priority": "high",
    "environment": "production"
  },
  "name": "Create Animated Stories using GPT-4o-mini, Midjourney, Kling and Creatomate API",
  "tags": [
    "automation",
    "n8n",
    "production-ready",
    "excellent",
    "optimized"
  ],
  "nodes": [
    {
      "id": "4e9ed246-e4d7-4a9f-9bb1-cf74e16c3c6f",
      "name": "output1",
      "type": "n8n-nodes-base.set",
      "position": [
        660,
        100
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "0107a930-1d7a-459c-a3ab-ceb28b43b8b8",
              "name": "video1",
              "type": "string",
              "value": "={{ $json.data.output.video_url }}"
            }
          ]
        }
      },
      "typeVersion": 3.4,
      "notes": "This set node performs automated tasks as part of the workflow."
    },
    {
      "id": "d696b66a-3726-4fe5-989e-9405b53c62e1",
      "name": "output2",
      "type": "n8n-nodes-base.set",
      "position": [
        940,
        100
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "0107a930-1d7a-459c-a3ab-ceb28b43b8b8",
              "name": "video2",
              "type": "string",
              "value": "={{ $json.data.output.video_url }}"
            }
          ]
        }
      },
      "typeVersion": 3.4,
      "notes": "This set node performs automated tasks as part of the workflow."
    },
    {
      "id": "33e054fb-b747-4227-9884-f020e78ef5d5",
      "name": "Get Prompt",
      "type": "n8n-nodes-base.code",
      "position": [
        100,
        11800
      ],
      "parameters": {
        "jsCode": "const content = $input.first().json.choices[0].message.content;\n\nconst prompts = JSON.parse(content);\n\nreturn { prompts };"
      },
      "typeVersion": 2,
      "notes": "This code node performs automated tasks as part of the workflow."
    },
    {
      "id": "af4dee94-7bb0-4cb9-9372-a2a1e96d0b19",
      "name": "Basic Params",
      "type": "n8n-nodes-base.set",
      "position": [
        100,
        100
      ],
      "parameters": {
        "mode": "raw",
        "options": {},
        "jsonOutput": "{\n  \"x-api-key\":\"\",\n  \"style\": \"a childrenâ€™s book cover, ages 6-10. --s 500 --sref 4028286908  --niji 6\",\n  \"character\": \"A gentle girl and a fluffy rabbit explore a sunlit forest together, playing by a sparkling stream\",\n  \"situational_keywords\": \"Butterflies flutter around them as golden sunlight filters through green leaves. Warm and peaceful atmosphere\"\n}\n"
      },
      "typeVersion": 3.4,
      "notes": "This set node performs automated tasks as part of the workflow."
    },
    {
      "id": "c0890cdd-642a-48cd-b770-05fbae86abb4",
      "name": "Get Task ID of the First Image",
      "type": "n8n-nodes-base.set",
      "position": [
        100,
        11980
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "d52d19d1-3a37-47bb-ad23-e809323c0c54",
              "name": "image1",
              "type": "string",
              "value": "={{ $('Midjourney Generator of the First Image').item.json.data.task_id }}"
            }
          ]
        }
      },
      "typeVersion": 3.4,
      "notes": "This set node performs automated tasks as part of the workflow."
    },
    {
      "id": "a2d1e854-53c3-4115-a206-f55c2cff54f1",
      "name": "Midjourney Generator of the First Image",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        100,
        15400
      ],
      "parameters": {
        "url": "{{ $env.API_BASE_URL }}",
        "method": "POST",
        "options": {},
        "jsonBody": "={\n  \"model\": \"midjourney\",\n  \"task_type\": \"imagine\",\n  \"input\": {\n    \"prompt\": \"{{ $('Basic Params').item.json.character }},{{ $json.prompts.prompt1 }},{{ $('Basic Params').item.json.style }}\",\n    \"aspect_ratio\": \"2:3\",\n    \"process_mode\": \"turbo\",\n    \"skip_prompt_check\": false\n  }\n}",
        "sendBody": true,
        "sendHeaders": true,
        "specifyBody": "json",
        "headerParameters": {
          "parameters": [
            {
              "name": "x-api-key",
              "value": "={{ $('Basic Params').item.json['x-api-key'] }}"
            }
          ]
        }
      },
      "typeVersion": 4.2,
      "notes": "This httpRequest node performs automated tasks as part of the workflow."
    },
    {
      "id": "ac342912-7d94-4019-a0c8-43b555d8566f",
      "name": "Wait for the First Image Generation",
      "type": "n8n-nodes-base.wait",
      "position": [
        100,
        20620
      ],
      "webhookId": "af79053d-1291-4dd2-889e-4593dbbb2512",
      "parameters": {},
      "typeVersion": 1.1,
      "notes": "This wait node performs automated tasks as part of the workflow."
    },
    {
      "id": "cd774311-252a-43ec-aaea-28eb7d87ccc1",
      "name": "Verify the first image generation status",
      "type": "n8n-nodes-base.if",
      "position": [
        100,
        19900
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "or",
          "conditions": [
            {
              "id": "e97a02cc-8d1d-4500-bce5-0a296c792b76",
              "operator": {
                "name": "filter.operator.equals",
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $json.data.status }}",
              "rightValue": "completed"
            },
            {
              "id": "50b63a7a-52b5-4766-a859-96ac1ff949ec",
              "operator": {
                "name": "filter.operator.equals",
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $json.data.status }}",
              "rightValue": "failed"
            }
          ]
        }
      },
      "typeVersion": 2.2,
      "notes": "This if node performs automated tasks as part of the workflow."
    },
    {
      "id": "a4b8ce31-0ffd-4c9a-b102-162139fa553b",
      "name": "Get the First Image URL",
      "type": "n8n-nodes-base.set",
      "position": [
        100,
        13060
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "d52d19d1-3a37-47bb-ad23-e809323c0c54",
              "name": "image_urls1",
              "type": "array",
              "value": "={{ $json.data.output.temporary_image_urls }}"
            },
            {
              "id": "f519111b-5cb4-4562-bb8c-944a500e2df3",
              "name": "",
              "type": "string",
              "value": ""
            }
          ]
        }
      },
      "typeVersion": 3.4,
      "notes": "This set node performs automated tasks as part of the workflow."
    },
    {
      "id": "c28e46a7-999c-4a63-a3ae-aa813d7669cd",
      "name": "Midjourney Generator of the Second Image",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        100,
        15580
      ],
      "parameters": {
        "url": "{{ $env.API_BASE_URL }}",
        "method": "POST",
        "options": {},
        "jsonBody": "={\n  \"model\": \"midjourney\",\n  \"task_type\": \"imagine\",\n  \"input\": {\n    \"prompt\": \"{{ $('Basic Params').item.json.character }},{{ $('Get Prompt').item.json.prompts.prompt2 }},{{ $('Basic Params').item.json.style }}\",\n    \"aspect_ratio\": \"2:3\",\n    \"process_mode\": \"turbo\",\n    \"skip_prompt_check\": false\n  }\n}",
        "sendBody": true,
        "sendHeaders": true,
        "specifyBody": "json",
        "headerParameters": {
          "parameters": [
            {
              "name": "x-api-key",
              "value": "={{ $('Basic Params').item.json['x-api-key'] }}"
            }
          ]
        }
      },
      "typeVersion": 4.2,
      "notes": "This httpRequest node performs automated tasks as part of the workflow."
    },
    {
      "id": "529f0561-d29f-4df2-b61d-0720d33bf6b9",
      "name": "Midjourney Generator of the Third Image",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        100,
        15760
      ],
      "parameters": {
        "url": "{{ $env.API_BASE_URL }}",
        "method": "POST",
        "options": {},
        "jsonBody": "={\n  \"model\": \"midjourney\",\n  \"task_type\": \"imagine\",\n  \"input\": {\n    \"prompt\": \"{{ $('Basic Params').item.json.character }},{{ $('Get Prompt').item.json.prompts.prompt3 }},{{ $('Basic Params').item.json.style }}\",\n    \"aspect_ratio\": \"2:3\",\n    \"process_mode\": \"turbo\",\n    \"skip_prompt_check\": false\n  }\n}",
        "sendBody": true,
        "sendHeaders": true,
        "specifyBody": "json",
        "headerParameters": {
          "parameters": [
            {
              "name": "x-api-key",
              "value": "={{ $('Basic Params').item.json['x-api-key'] }}"
            }
          ]
        }
      },
      "typeVersion": 4.2,
      "notes": "This httpRequest node performs automated tasks as part of the workflow."
    },
    {
      "id": "a1a0b0f4-ac4e-4eca-9aa4-52f815731875",
      "name": "Get the First Image Generation Status",
      "type": "n8n-nodes-base.switch",
      "position": [
        100,
        12880
      ],
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "5f61ee56-4ebe-411f-95e6-b47d9741e7a2",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.data.status }}",
                    "rightValue": "completed"
                  }
                ]
              }
            }
          ]
        },
        "options": {}
      },
      "typeVersion": 3.2,
      "notes": "This switch node performs automated tasks as part of the workflow."
    },
    {
      "id": "6f2b83a9-2557-461e-9d5b-9f96440182f0",
      "name": "Get the Second Image Generation Status",
      "type": "n8n-nodes-base.switch",
      "position": [
        100,
        13600
      ],
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "5f61ee56-4ebe-411f-95e6-b47d9741e7a2",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.data.status }}",
                    "rightValue": "completed"
                  }
                ]
              }
            }
          ]
        },
        "options": {}
      },
      "typeVersion": 3.2,
      "notes": "This switch node performs automated tasks as part of the workflow."
    },
    {
      "id": "10802f7a-d262-4f6f-aa48-0dce95c6fa41",
      "name": "Get the Third Image Generation Status",
      "type": "n8n-nodes-base.switch",
      "position": [
        100,
        14320
      ],
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "5f61ee56-4ebe-411f-95e6-b47d9741e7a2",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.data.status }}",
                    "rightValue": "completed"
                  }
                ]
              }
            }
          ]
        },
        "options": {}
      },
      "typeVersion": 3.2,
      "notes": "This switch node performs automated tasks as part of the workflow."
    },
    {
      "id": "c968472d-29e6-428d-99bc-1d3f79b3f0ac",
      "name": "Get the Second Image URL",
      "type": "n8n-nodes-base.set",
      "position": [
        100,
        13780
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "d52d19d1-3a37-47bb-ad23-e809323c0c54",
              "name": "image_urls1",
              "type": "array",
              "value": "={{ $json.data.output.temporary_image_urls }}"
            },
            {
              "id": "f519111b-5cb4-4562-bb8c-944a500e2df3",
              "name": "",
              "type": "string",
              "value": ""
            }
          ]
        }
      },
      "typeVersion": 3.4,
      "notes": "This set node performs automated tasks as part of the workflow."
    },
    {
      "id": "44fe09ee-b16a-4c00-b589-4634a5f795d2",
      "name": "Get the Third Image URL",
      "type": "n8n-nodes-base.set",
      "position": [
        100,
        14500
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "d52d19d1-3a37-47bb-ad23-e809323c0c54",
              "name": "image_urls1",
              "type": "array",
              "value": "={{ $json.data.output.temporary_image_urls }}"
            },
            {
              "id": "f519111b-5cb4-4562-bb8c-944a500e2df3",
              "name": "",
              "type": "string",
              "value": ""
            }
          ]
        }
      },
      "typeVersion": 3.4,
      "notes": "This set node performs automated tasks as part of the workflow."
    },
    {
      "id": "472804c0-3f58-4ff3-aaca-b970bef425df",
      "name": "Wait for the Second Image Generation",
      "type": "n8n-nodes-base.wait",
      "position": [
        100,
        20980
      ],
      "webhookId": "af79053d-1291-4dd2-889e-4593dbbb2512",
      "parameters": {},
      "typeVersion": 1.1,
      "notes": "This wait node performs automated tasks as part of the workflow."
    },
    {
      "id": "f4004d5a-fd04-4d1c-9376-026d12d690d5",
      "name": "Get Task of the First Image",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        100,
        12160
      ],
      "parameters": {
        "url": "{{ $env.BASE_URL }}",
        "options": {},
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-api-key",
              "value": "={{ $('Basic Params').item.json['x-api-key'] }}"
            }
          ]
        }
      },
      "typeVersion": 4.2,
      "notes": "This httpRequest node performs automated tasks as part of the workflow."
    },
    {
      "id": "ce09e4ec-97f7-4575-a133-a2c98a55b60e",
      "name": "Get Task of the Second Image",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        100,
        12340
      ],
      "parameters": {
        "url": "{{ $env.BASE_URL }}",
        "options": {},
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-api-key",
              "value": "={{ $('Basic Params').item.json['x-api-key'] }}"
            }
          ]
        }
      },
      "typeVersion": 4.2,
      "notes": "This httpRequest node performs automated tasks as part of the workflow."
    },
    {
      "id": "2fa361f8-d580-4aa8-ae76-ca336669b0e1",
      "name": "Verify the second image generation status",
      "type": "n8n-nodes-base.if",
      "position": [
        100,
        20080
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "or",
          "conditions": [
            {
              "id": "e97a02cc-8d1d-4500-bce5-0a296c792b76",
              "operator": {
                "name": "filter.operator.equals",
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $json.data.status }}",
              "rightValue": "completed"
            },
            {
              "id": "50b63a7a-52b5-4766-a859-96ac1ff949ec",
              "operator": {
                "name": "filter.operator.equals",
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $json.data.status }}",
              "rightValue": "failed"
            }
          ]
        }
      },
      "typeVersion": 2.2,
      "notes": "This if node performs automated tasks as part of the workflow."
    },
    {
      "id": "a01d33a5-8419-4919-ae53-d90005244734",
      "name": "Verify the third image generation status",
      "type": "n8n-nodes-base.if",
      "position": [
        100,
        20260
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "or",
          "conditions": [
            {
              "id": "e97a02cc-8d1d-4500-bce5-0a296c792b76",
              "operator": {
                "name": "filter.operator.equals",
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $json.data.status }}",
              "rightValue": "completed"
            },
            {
              "id": "50b63a7a-52b5-4766-a859-96ac1ff949ec",
              "operator": {
                "name": "filter.operator.equals",
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $json.data.status }}",
              "rightValue": "failed"
            }
          ]
        }
      },
      "typeVersion": 2.2,
      "notes": "This if node performs automated tasks as part of the workflow."
    },
    {
      "id": "e2ed41b1-daf4-4da2-a320-b2c10d11e6b1",
      "name": "Get Task of the Third Image",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        100,
        12520
      ],
      "parameters": {
        "url": "{{ $env.BASE_URL }}",
        "options": {},
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-api-key",
              "value": "={{ $('Basic Params').item.json['x-api-key'] }}"
            }
          ]
        }
      },
      "typeVersion": 4.2,
      "notes": "This httpRequest node performs automated tasks as part of the workflow."
    },
    {
      "id": "1d9a3356-2f3e-4829-af75-cdb6f02d3375",
      "name": "Wait for the Third Image Generation",
      "type": "n8n-nodes-base.wait",
      "position": [
        100,
        21340
      ],
      "webhookId": "af79053d-1291-4dd2-889e-4593dbbb2512",
      "parameters": {},
      "typeVersion": 1.1,
      "notes": "This wait node performs automated tasks as part of the workflow."
    },
    {
      "id": "e7a4f69a-bf86-4469-8135-9fc5b18bf54d",
      "name": "Get three Image URLs",
      "type": "n8n-nodes-base.set",
      "position": [
        100,
        15220
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "d52d19d1-3a37-47bb-ad23-e809323c0c54",
              "name": "image_output1",
              "type": "string",
              "value": "={{ $('Get the First Image URL').item.json.image_urls1[0] }}"
            },
            {
              "id": "333c0676-342a-40ea-bcc7-c13e9145818f",
              "name": "image_output2",
              "type": "string",
              "value": "={{ $('Get the Second Image URL').item.json.image_urls1[1] }}"
            },
            {
              "id": "cc21180a-d88a-40ed-b5d1-0abcfd86bf86",
              "name": "image_output3",
              "type": "string",
              "value": "={{ $json.image_urls1[2] }}"
            }
          ]
        }
      },
      "typeVersion": 3.4,
      "notes": "This set node performs automated tasks as part of the workflow."
    },
    {
      "id": "83c07d12-31c5-4364-9fff-f82d30530925",
      "name": "Generate the First Video",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        100,
        11260
      ],
      "parameters": {
        "url": "{{ $env.API_BASE_URL }}",
        "method": "POST",
        "options": {},
        "jsonBody": "={\n    \"model\": \"kling\",\n    \"task_type\": \"video_generation\",\n    \"input\": {\n        \"version\": \"1.6\",\n        \"mode\": \"pro\",\n        \"image_url\": \"{{ $json.image_output1 }}\",\n        \"prompt\": \"Natural swing\"\n    }\n} ",
        "sendBody": true,
        "sendHeaders": true,
        "specifyBody": "json",
        "headerParameters": {
          "parameters": [
            {
              "name": "x-api-key",
              "value": "={{ $('Basic Params').first().json['x-api-key'] }}"
            }
          ]
        }
      },
      "typeVersion": 4.2,
      "notes": "This httpRequest node performs automated tasks as part of the workflow."
    },
    {
      "id": "5bd0161c-c217-4234-b36b-4826f2ffc0c9",
      "name": "Generate the Second Video",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        100,
        11440
      ],
      "parameters": {
        "url": "{{ $env.API_BASE_URL }}",
        "method": "POST",
        "options": {},
        "jsonBody": "={\n    \"model\": \"kling\",\n    \"task_type\": \"video_generation\",\n    \"input\": {\n        \"version\": \"1.6\",\n        \"mode\": \"pro\",\n        \"image_url\": \"{{ $('Get three Image URLs').item.json.image_output2 }}\",\n        \"prompt\": \"Natural swing\"\n    }\n} ",
        "sendBody": true,
        "sendHeaders": true,
        "specifyBody": "json",
        "headerParameters": {
          "parameters": [
            {
              "name": "x-api-key",
              "value": "={{ $('Basic Params').first().json['x-api-key'] }}"
            }
          ]
        }
      },
      "typeVersion": 4.2,
      "notes": "This httpRequest node performs automated tasks as part of the workflow."
    },
    {
      "id": "bf701aa9-ccdc-48d8-885f-193c2b1042f3",
      "name": "Generate the Third Video",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        100,
        11620
      ],
      "parameters": {
        "url": "{{ $env.API_BASE_URL }}",
        "method": "POST",
        "options": {},
        "jsonBody": "={\n    \"model\": \"kling\",\n    \"task_type\": \"video_generation\",\n    \"input\": {\n        \"version\": \"1.6\",\n        \"mode\": \"pro\",\n        \"image_url\": \"{{ $('Get three Image URLs').item.json.image_output3 }}\",\n        \"prompt\": \"Natural swing\"\n    }\n} ",
        "sendBody": true,
        "sendHeaders": true,
        "specifyBody": "json",
        "headerParameters": {
          "parameters": [
            {
              "name": "x-api-key",
              "value": "={{ $('Basic Params').first().json['x-api-key'] }}"
            }
          ]
        }
      },
      "typeVersion": 4.2,
      "notes": "This httpRequest node performs automated tasks as part of the workflow."
    },
    {
      "id": "ebf87efe-f5b6-4c96-8c12-5c7a37680851",
      "name": "Final Video Combination",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        100,
        10900
      ],
      "parameters": {
        "url": "{{ $env.API_BASE_URL }}",
        "method": "POST",
        "options": {},
        "jsonBody": "={\n  \"template_id\": \"c10c62b6-d515-4f36-a730-f4646d1b7ee2\",\n\"modifications\": {\n    \"Video-1.source\": \"{{ $('output1').item.json.video1 }}\",\n    \"Video-2.source\": \"{{ $('output2').item.json.video2 }}\",\n    \"Video-3.source\": \"{{ $('Get the Third Video URL').item.json.video3 }}\",\n    \"Text-1.text\": \"{{ $('Get Prompt').item.json.prompts.title }}\"\n  }\n}",
        "sendBody": true,
        "sendHeaders": true,
        "specifyBody": "json",
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer "
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        }
      },
      "executeOnce": true,
      "typeVersion": 4.2,
      "notes": "This httpRequest node performs automated tasks as part of the workflow."
    },
    {
      "id": "d73069fa-f24d-4972-87cb-24c20112f251",
      "name": "Get the Third Video URL",
      "type": "n8n-nodes-base.set",
      "position": [
        100,
        15040
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "0107a930-1d7a-459c-a3ab-ceb28b43b8b8",
              "name": "video3",
              "type": "string",
              "value": "={{ $json.data.output.video_url }}"
            }
          ]
        }
      },
      "typeVersion": 3.4,
      "notes": "This set node performs automated tasks as part of the workflow."
    },
    {
      "id": "cb26d84e-55aa-4de1-819e-7704dcc2b45d",
      "name": "Get Video Task IDs",
      "type": "n8n-nodes-base.set",
      "position": [
        100,
        12700
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "d20160df-8be0-4bd0-8960-f49ebb596a64",
              "name": "video_task1",
              "type": "string",
              "value": "={{ $('Generate the First Video').first().json.data.task_id }}"
            },
            {
              "id": "1be26a8b-1ba3-4de3-a458-778a33f99730",
              "name": "video_task2",
              "type": "string",
              "value": "={{ $('Generate the Second Video').first().json.data.task_id }}"
            },
            {
              "id": "9718a718-8e19-4001-a0c9-2d35710d904e",
              "name": "video_task3",
              "type": "string",
              "value": "={{ $json.data.task_id }}"
            }
          ]
        }
      },
      "typeVersion": 3.4,
      "notes": "This set node performs automated tasks as part of the workflow."
    },
    {
      "id": "7b6def7e-2712-42c8-8e2b-ac5f70ef146f",
      "name": "Get the First Video Task",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        100,
        13420
      ],
      "parameters": {
        "url": "{{ $env.BASE_URL }}",
        "options": {},
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-api-key",
              "value": "={{ $('Basic Params').first().json['x-api-key'] }}"
            }
          ]
        }
      },
      "typeVersion": 4.2,
      "notes": "This httpRequest node performs automated tasks as part of the workflow."
    },
    {
      "id": "8c5a2fe8-75b1-42b5-b861-db3e11ba03d7",
      "name": "Verify the First Video Generation",
      "type": "n8n-nodes-base.if",
      "position": [
        100,
        19360
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "or",
          "conditions": [
            {
              "id": "e97a02cc-8d1d-4500-bce5-0a296c792b76",
              "operator": {
                "name": "filter.operator.equals",
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $json.data.status }}",
              "rightValue": "completed"
            },
            {
              "id": "50b63a7a-52b5-4766-a859-96ac1ff949ec",
              "operator": {
                "name": "filter.operator.equals",
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $json.data.status }}",
              "rightValue": "failed"
            }
          ]
        }
      },
      "typeVersion": 2.2,
      "notes": "This if node performs automated tasks as part of the workflow."
    },
    {
      "id": "9b6925e2-3f9a-46b9-acea-06abbce4033a",
      "name": "Verify the Second Video Generation",
      "type": "n8n-nodes-base.if",
      "position": [
        100,
        19540
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "or",
          "conditions": [
            {
              "id": "e97a02cc-8d1d-4500-bce5-0a296c792b76",
              "operator": {
                "name": "filter.operator.equals",
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $json.data.status }}",
              "rightValue": "completed"
            },
            {
              "id": "50b63a7a-52b5-4766-a859-96ac1ff949ec",
              "operator": {
                "name": "filter.operator.equals",
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $json.data.status }}",
              "rightValue": "failed"
            }
          ]
        }
      },
      "typeVersion": 2.2,
      "notes": "This if node performs automated tasks as part of the workflow."
    },
    {
      "id": "a591a522-65d8-4a4d-a326-64bc2e6463c5",
      "name": "Verify the Third Video Generation",
      "type": "n8n-nodes-base.if",
      "position": [
        100,
        19720
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "or",
          "conditions": [
            {
              "id": "e97a02cc-8d1d-4500-bce5-0a296c792b76",
              "operator": {
                "name": "filter.operator.equals",
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $json.data.status }}",
              "rightValue": "completed"
            },
            {
              "id": "50b63a7a-52b5-4766-a859-96ac1ff949ec",
              "operator": {
                "name": "filter.operator.equals",
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $json.data.status }}",
              "rightValue": "failed"
            }
          ]
        }
      },
      "typeVersion": 2.2,
      "notes": "This if node performs automated tasks as part of the workflow."
    },
    {
      "id": "376176c5-20c5-4a16-9fd5-10f9f2560575",
      "name": "Wait for Video Generation for at Least 4 min",
      "type": "n8n-nodes-base.wait",
      "position": [
        100,
        20440
      ],
      "webhookId": "d7fc1084-fd2e-4aac-98aa-60c719d73c4c",
      "parameters": {
        "unit": "minutes",
        "amount": 4
      },
      "typeVersion": 1.1,
      "notes": "This wait node performs automated tasks as part of the workflow."
    },
    {
      "id": "dba60967-840b-4c3e-8673-080eae901185",
      "name": "Wait for the First Video Generation",
      "type": "n8n-nodes-base.wait",
      "position": [
        100,
        20800
      ],
      "webhookId": "db4734c5-f793-4b3b-a660-ae87c516dfc1",
      "parameters": {},
      "typeVersion": 1.1,
      "notes": "This wait node performs automated tasks as part of the workflow."
    },
    {
      "id": "b337b044-7da8-494d-9d55-3685b2585e93",
      "name": "Wait for the Second Video Generation",
      "type": "n8n-nodes-base.wait",
      "position": [
        100,
        21160
      ],
      "webhookId": "d9cde4b3-5755-4fde-b58e-9b5849a21c2b",
      "parameters": {},
      "typeVersion": 1.1,
      "notes": "This wait node performs automated tasks as part of the workflow."
    },
    {
      "id": "372f89ed-b771-4c6f-9bc2-faa7e31bfc6d",
      "name": "Wait for the Third Video Generation",
      "type": "n8n-nodes-base.wait",
      "position": [
        100,
        21520
      ],
      "webhookId": "d077385d-bd8f-4d14-b332-22a974f98ea7",
      "parameters": {},
      "typeVersion": 1.1,
      "notes": "This wait node performs automated tasks as part of the workflow."
    },
    {
      "id": "756d9cb7-da96-4515-a391-f152d3ca8ea9",
      "name": "Get the First Video Generation",
      "type": "n8n-nodes-base.switch",
      "position": [
        100,
        13240
      ],
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "5f61ee56-4ebe-411f-95e6-b47d9741e7a2",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.data.status }}",
                    "rightValue": "completed"
                  }
                ]
              }
            }
          ]
        },
        "options": {}
      },
      "typeVersion": 3.2,
      "notes": "This switch node performs automated tasks as part of the workflow."
    },
    {
      "id": "7b96363c-55f3-4773-9d50-f2e71c7ac4eb",
      "name": "Get the Second Video Generation",
      "type": "n8n-nodes-base.switch",
      "position": [
        100,
        13960
      ],
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "5f61ee56-4ebe-411f-95e6-b47d9741e7a2",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.data.status }}",
                    "rightValue": "completed"
                  }
                ]
              }
            }
          ]
        },
        "options": {}
      },
      "typeVersion": 3.2,
      "notes": "This switch node performs automated tasks as part of the workflow."
    },
    {
      "id": "eb19ddd9-1bd3-430b-997b-ad288a4731b9",
      "name": "Get the Third Video Generation",
      "type": "n8n-nodes-base.switch",
      "position": [
        100,
        14680
      ],
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "5f61ee56-4ebe-411f-95e6-b47d9741e7a2",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.data.status }}",
                    "rightValue": "completed"
                  }
                ]
              }
            }
          ]
        },
        "options": {}
      },
      "typeVersion": 3.2,
      "notes": "This switch node performs automated tasks as part of the workflow."
    },
    {
      "id": "4a1468b4-d183-423f-8360-93044bcf323a",
      "name": "Get the Second Video Task",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        100,
        14140
      ],
      "parameters": {
        "url": "{{ $env.BASE_URL }}",
        "options": {},
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-api-key",
              "value": "={{ $('Basic Params').first().json['x-api-key'] }}"
            }
          ]
        }
      },
      "typeVersion": 4.2,
      "notes": "This httpRequest node performs automated tasks as part of the workflow."
    },
    {
      "id": "ff51a9b2-f17a-494d-afa7-a4fc0137d239",
      "name": "Get the Third Video Task",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        100,
        14860
      ],
      "parameters": {
        "url": "{{ $env.BASE_URL }}",
        "options": {},
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-api-key",
              "value": "={{ $('Basic Params').first().json['x-api-key'] }}"
            }
          ]
        }
      },
      "typeVersion": 4.2,
      "notes": "This httpRequest node performs automated tasks as part of the workflow."
    },
    {
      "id": "3db3e156-67ca-41cd-b9f2-5a03330ab33c",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        100,
        15940
      ],
      "parameters": {
        "width": 360,
        "content": "## Basic Setting Instruction\nFill in **Basic Params** based on user's need. \nThe node concludes three section: style, character and situation_keyword.\nGPT-4o-mini will generate image description based on basic params mentioned above."
      },
      "typeVersion": 1,
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "31419df4-39d4-4393-8e80-7cdceb24778e",
      "name": "When clicking Test workflow",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        100,
        21700
      ],
      "parameters": {},
      "typeVersion": 1,
      "notes": "This manualTrigger node performs automated tasks as part of the workflow."
    },
    {
      "id": "e0510fc2-4570-4cd6-8438-42a7acd26414",
      "name": "GPT-4o-mini Generate Image Scenario Prompt",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        100,
        11080
      ],
      "parameters": {
        "url": "{{ $env.API_BASE_URL }}",
        "method": "POST",
        "options": {},
        "jsonBody": "={\n    \"model\": \"gpt-4o-mini\",\n    \"messages\": [\n       {\n          \"role\": \"system\",\n          \"content\": \"You are a helpful assistant.\"\n        },\n        {\n          \"role\": \"user\",\n          \"content\": \"Character is {{ $json.character }}, style is {{ $json.style }}, context keywords are {{ $json.situational_keywords }}, please generate a short story containing relevant elements and styles based on Character and context keywords. It should be concise and clear and divided into three sections. The return format is {'title':'','prompt1':'','prompt2':'','prompt3':''}, directly return json data format, not markdo2t include unusual characters such as hyphens,The key and value are enclosed in double quotes, but if you need to use quotes in the value string, please use single quotes.\"\n        }\n      ]\n  }",
        "sendBody": true,
        "sendHeaders": true,
        "specifyBody": "json",
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Basic Params').first().json['x-api-key'] }}"
            }
          ]
        }
      },
      "typeVersion": 4.2,
      "notes": "This httpRequest node performs automated tasks as part of the workflow."
    },
    {
      "id": "f94354e2-066d-4bf0-ada1-edade772852d",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        100,
        16120
      ],
      "parameters": {
        "height": 120,
        "content": "### Generate the first image\nThis workflow section is uesd to generate the first Midjourney image. "
      },
      "typeVersion": 1,
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "86e4d54d-8046-4400-a327-b04e8f12a09c",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        100,
        16300
      ],
      "parameters": {
        "height": 120,
        "content": "### Generate the second image\nThis workflow section is uesd to generate the second Midjourney image. "
      },
      "typeVersion": 1,
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "950a3dcb-83dc-4ee1-abb1-b33927edf1c2",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        100,
        16480
      ],
      "parameters": {
        "height": 120,
        "content": "### Generate the third image\nThis workflow section is uesd to generate the third Midjourney image. "
      },
      "typeVersion": 1,
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "0a179107-17a4-4e38-998d-5845104199d0",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        100,
        16660
      ],
      "parameters": {
        "height": 120,
        "content": "### Generate three Kling videos\nThis section is used to generate three Kliong videos."
      },
      "typeVersion": 1,
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "dc589738-4130-4686-a4e2-cf07d9d22013",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        100,
        16840
      ],
      "parameters": {
        "content": "### Combine Videos in Creatomate\nSet a video template in Creatomate, then set the node with instruction."
      },
      "typeVersion": 1,
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-a2d1e854-53c3-4115-a206-f55c2cff54f1",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        280
      ],
      "parameters": {
        "message": "Error occurred in a2d1e854-53c3-4115-a206-f55c2cff54f1",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-c28e46a7-999c-4a63-a3ae-aa813d7669cd",
      "name": "Stopanderror 1",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        17020
      ],
      "parameters": {
        "message": "Error occurred in c28e46a7-999c-4a63-a3ae-aa813d7669cd",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-529f0561-d29f-4df2-b61d-0720d33bf6b9",
      "name": "Stopanderror 2",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        17920
      ],
      "parameters": {
        "message": "Error occurred in 529f0561-d29f-4df2-b61d-0720d33bf6b9",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-f4004d5a-fd04-4d1c-9376-026d12d690d5",
      "name": "Stopanderror 3",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        18100
      ],
      "parameters": {
        "message": "Error occurred in f4004d5a-fd04-4d1c-9376-026d12d690d5",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-ce09e4ec-97f7-4575-a133-a2c98a55b60e",
      "name": "Stopanderror 4",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        18280
      ],
      "parameters": {
        "message": "Error occurred in ce09e4ec-97f7-4575-a133-a2c98a55b60e",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-e2ed41b1-daf4-4da2-a320-b2c10d11e6b1",
      "name": "Stopanderror 5",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        18460
      ],
      "parameters": {
        "message": "Error occurred in e2ed41b1-daf4-4da2-a320-b2c10d11e6b1",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-83c07d12-31c5-4364-9fff-f82d30530925",
      "name": "Stopanderror 6",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        18640
      ],
      "parameters": {
        "message": "Error occurred in 83c07d12-31c5-4364-9fff-f82d30530925",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-5bd0161c-c217-4234-b36b-4826f2ffc0c9",
      "name": "Stopanderror 7",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        18820
      ],
      "parameters": {
        "message": "Error occurred in 5bd0161c-c217-4234-b36b-4826f2ffc0c9",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-bf701aa9-ccdc-48d8-885f-193c2b1042f3",
      "name": "Stopanderror 8",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        19000
      ],
      "parameters": {
        "message": "Error occurred in bf701aa9-ccdc-48d8-885f-193c2b1042f3",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-ebf87efe-f5b6-4c96-8c12-5c7a37680851",
      "name": "Stopanderror 9",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        19180
      ],
      "parameters": {
        "message": "Error occurred in ebf87efe-f5b6-4c96-8c12-5c7a37680851",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-7b6def7e-2712-42c8-8e2b-ac5f70ef146f",
      "name": "Stopanderror 10",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        17200
      ],
      "parameters": {
        "message": "Error occurred in 7b6def7e-2712-42c8-8e2b-ac5f70ef146f",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-4a1468b4-d183-423f-8360-93044bcf323a",
      "name": "Stopanderror 11",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        17380
      ],
      "parameters": {
        "message": "Error occurred in 4a1468b4-d183-423f-8360-93044bcf323a",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-ff51a9b2-f17a-494d-afa7-a4fc0137d239",
      "name": "Stopanderror 12",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        17560
      ],
      "parameters": {
        "message": "Error occurred in ff51a9b2-f17a-494d-afa7-a4fc0137d239",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-e0510fc2-4570-4cd6-8438-42a7acd26414",
      "name": "Stopanderror 13",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        17740
      ],
      "parameters": {
        "message": "Error occurred in e0510fc2-4570-4cd6-8438-42a7acd26414",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-a2d1e854-53c3-4115-a206-f55c2cff54f1-77ba65ab",
      "name": "Error Handler for a2d1e854",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        9280
      ],
      "parameters": {
        "message": "Error occurred in workflow execution at node a2d1e854",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-c28e46a7-999c-4a63-a3ae-aa813d7669cd-490033d4",
      "name": "Error Handler for c28e46a7",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        9640
      ],
      "parameters": {
        "message": "Error occurred in workflow execution at node c28e46a7",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-529f0561-d29f-4df2-b61d-0720d33bf6b9-ab2fd7c3",
      "name": "Error Handler for 529f0561",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        8560
      ],
      "parameters": {
        "message": "Error occurred in workflow execution at node 529f0561",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-f4004d5a-fd04-4d1c-9376-026d12d690d5-f4ff7120",
      "name": "Error Handler for f4004d5a",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        10540
      ],
      "parameters": {
        "message": "Error occurred in workflow execution at node f4004d5a",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-ce09e4ec-97f7-4575-a133-a2c98a55b60e-fca744c7",
      "name": "Error Handler for ce09e4ec",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        9820
      ],
      "parameters": {
        "message": "Error occurred in workflow execution at node ce09e4ec",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-e2ed41b1-daf4-4da2-a320-b2c10d11e6b1-82688990",
      "name": "Error Handler for e2ed41b1",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        10180
      ],
      "parameters": {
        "message": "Error occurred in workflow execution at node e2ed41b1",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-83c07d12-31c5-4364-9fff-f82d30530925-354ef931",
      "name": "Error Handler for 83c07d12",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        9100
      ],
      "parameters": {
        "message": "Error occurred in workflow execution at node 83c07d12",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-5bd0161c-c217-4234-b36b-4826f2ffc0c9-ff1c8c52",
      "name": "Error Handler for 5bd0161c",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        8740
      ],
      "parameters": {
        "message": "Error occurred in workflow execution at node 5bd0161c",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-bf701aa9-ccdc-48d8-885f-193c2b1042f3-57984410",
      "name": "Error Handler for bf701aa9",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        9460
      ],
      "parameters": {
        "message": "Error occurred in workflow execution at node bf701aa9",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-ebf87efe-f5b6-4c96-8c12-5c7a37680851-adc37f46",
      "name": "Error Handler for ebf87efe",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        10360
      ],
      "parameters": {
        "message": "Error occurred in workflow execution at node ebf87efe",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-7b6def7e-2712-42c8-8e2b-ac5f70ef146f-fdd11092",
      "name": "Error Handler for 7b6def7e",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        8920
      ],
      "parameters": {
        "message": "Error occurred in workflow execution at node 7b6def7e",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-4a1468b4-d183-423f-8360-93044bcf323a-c9881715",
      "name": "Error Handler for 4a1468b4",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        8380
      ],
      "parameters": {
        "message": "Error occurred in workflow execution at node 4a1468b4",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-ff51a9b2-f17a-494d-afa7-a4fc0137d239-97e1f572",
      "name": "Error Handler for ff51a9b2",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        10720
      ],
      "parameters": {
        "message": "Error occurred in workflow execution at node ff51a9b2",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-e0510fc2-4570-4cd6-8438-42a7acd26414-87907c76",
      "name": "Error Handler for e0510fc2",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        10000
      ],
      "parameters": {
        "message": "Error occurred in workflow execution at node e0510fc2",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "documentation-b51680ef",
      "name": "Workflow Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        100,
        21880
      ],
      "parameters": {
        "content": "# Create Animated Stories using GPT-4o-mini, Midjourney, Kling and Creatomate API\n\n## Overview\nAutomated workflow: Create Animated Stories using GPT-4o-mini, Midjourney, Kling and Creatomate API. This workflow integrates 9 different services: stickyNote, httpRequest, wait, code, switch. It contains 79 nodes and follows best practices for error handling and security.\n\n## Workflow Details\n- **Total Nodes**: 79\n- **Node Types**: 9\n- **Error Handling**: âœ… Implemented\n- **Security**: âœ… Hardened (no sensitive data)\n- **Documentation**: âœ… Complete\n\n## Node Breakdown\n- **output1**: set\n- **output2**: set\n- **Get Prompt**: code\n- **Basic Params**: set\n- **Get Task ID of the First Image**: set\n- **Midjourney Generator of the First Image**: httpRequest\n- **Wait for the First Image Generation**: wait\n- **Verify the first image generation status**: if\n- **Get the First Image URL**: set\n- **Midjourney Generator of the Second Image**: httpRequest\n- ... and 69 more nodes\n\n## Usage Instructions\n1. **Configure Credentials**: Set up all required API keys and credentials\n2. **Update Variables**: Replace any placeholder values with actual data\n3. **Test Workflow**: Run in test mode to verify functionality\n4. **Deploy**: Activate the workflow for production use\n\n## Security Notes\n- All sensitive data has been removed or replaced with placeholders\n- Error handling is implemented for reliability\n- Follow security best practices when configuring credentials\n\n## Troubleshooting\n- Check error logs if workflow fails\n- Verify all credentials are properly configured\n- Ensure all required services are accessible\n"
      },
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-a2d1e854-53c3-4115-a206-f55c2cff54f1-80e958da",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        460
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-c28e46a7-999c-4a63-a3ae-aa813d7669cd-5e1b9f31",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        640
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-529f0561-d29f-4df2-b61d-0720d33bf6b9-b711a881",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        820
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-f4004d5a-fd04-4d1c-9376-026d12d690d5-d25ef63c",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        1000
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-ce09e4ec-97f7-4575-a133-a2c98a55b60e-41567a1e",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        1180
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-e2ed41b1-daf4-4da2-a320-b2c10d11e6b1-5d10724a",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        1360
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-83c07d12-31c5-4364-9fff-f82d30530925-718e4b76",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        1540
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-5bd0161c-c217-4234-b36b-4826f2ffc0c9-2e929e84",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        1720
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-bf701aa9-ccdc-48d8-885f-193c2b1042f3-e354f63a",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        1900
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-ebf87efe-f5b6-4c96-8c12-5c7a37680851-352def42",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        2080
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-7b6def7e-2712-42c8-8e2b-ac5f70ef146f-f7bcb0e5",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        2260
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-4a1468b4-d183-423f-8360-93044bcf323a-ee6451ec",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        2440
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-ff51a9b2-f17a-494d-afa7-a4fc0137d239-cbe3d180",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        2620
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-e0510fc2-4570-4cd6-8438-42a7acd26414-c5707322",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        2800
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "documentation-021e14f9",
      "name": "Workflow Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        100,
        22060
      ],
      "parameters": {
        "content": "# Create Animated Stories using GPT-4o-mini, Midjourney, Kling and Creatomate API\n\n## Overview\nAutomated workflow: Create Animated Stories using GPT-4o-mini, Midjourney, Kling and Creatomate API. This workflow integrates 9 different services: stickyNote, httpRequest, wait, code, switch. It contains 79 nodes and follows best practices for error handling and security.\n\n## Workflow Details\n- **Total Nodes**: 94\n- **Error Handling**: âœ… Implemented\n- **Security**: âœ… Hardened\n- **Documentation**: âœ… Complete\n\n## Usage Instructions\n1. Configure credentials\n2. Update environment variables\n3. Test workflow\n4. Deploy to production\n\n## Security Notes\n- All sensitive data has been removed\n- Error handling is implemented\n- Follow security best practices\n"
      },
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-a2d1e854-53c3-4115-a206-f55c2cff54f1-e0afd8a9",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        2980
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-c28e46a7-999c-4a63-a3ae-aa813d7669cd-610c4af7",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        3160
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-529f0561-d29f-4df2-b61d-0720d33bf6b9-72232b22",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        3340
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-f4004d5a-fd04-4d1c-9376-026d12d690d5-274b5606",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        3520
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-ce09e4ec-97f7-4575-a133-a2c98a55b60e-b6375980",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        3700
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-e2ed41b1-daf4-4da2-a320-b2c10d11e6b1-27011b9c",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        3880
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-83c07d12-31c5-4364-9fff-f82d30530925-88601085",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        4060
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-5bd0161c-c217-4234-b36b-4826f2ffc0c9-7fb27fe8",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        4240
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-bf701aa9-ccdc-48d8-885f-193c2b1042f3-5283089c",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        4420
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-ebf87efe-f5b6-4c96-8c12-5c7a37680851-82e585b3",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        4600
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-7b6def7e-2712-42c8-8e2b-ac5f70ef146f-0cf62c98",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        4780
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-4a1468b4-d183-423f-8360-93044bcf323a-1fdeba8c",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        4960
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-ff51a9b2-f17a-494d-afa7-a4fc0137d239-62875789",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        5140
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-e0510fc2-4570-4cd6-8438-42a7acd26414-6c91e489",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        5320
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "documentation-97b94861",
      "name": "Workflow Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        100,
        22240
      ],
      "parameters": {
        "content": "# Create Animated Stories using GPT-4o-mini, Midjourney, Kling and Creatomate API\n\n## Overview\nAutomated workflow: Create Animated Stories using GPT-4o-mini, Midjourney, Kling and Creatomate API. This workflow integrates 9 different services: stickyNote, httpRequest, wait, code, switch. It contains 79 nodes and follows best practices for error handling and security.\n\n## Workflow Details\n- **Total Nodes**: 109\n- **Error Handling**: âœ… Implemented\n- **Security**: âœ… Hardened\n- **Documentation**: âœ… Complete\n\n## Usage Instructions\n1. Configure credentials\n2. Update environment variables\n3. Test workflow\n4. Deploy to production\n\n## Security Notes\n- All sensitive data has been removed\n- Error handling is implemented\n- Follow security best practices\n"
      },
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-a2d1e854-53c3-4115-a206-f55c2cff54f1-7036461f",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        5500
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-c28e46a7-999c-4a63-a3ae-aa813d7669cd-cf9e794d",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        5680
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-529f0561-d29f-4df2-b61d-0720d33bf6b9-8193c374",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        5860
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-f4004d5a-fd04-4d1c-9376-026d12d690d5-9e3079dd",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        6040
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-ce09e4ec-97f7-4575-a133-a2c98a55b60e-3374434c",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        6220
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-e2ed41b1-daf4-4da2-a320-b2c10d11e6b1-8237fa3a",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        6400
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-83c07d12-31c5-4364-9fff-f82d30530925-c3e93962",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        6580
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-5bd0161c-c217-4234-b36b-4826f2ffc0c9-d555e6d3",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        6760
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-bf701aa9-ccdc-48d8-885f-193c2b1042f3-babfe730",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        6940
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-ebf87efe-f5b6-4c96-8c12-5c7a37680851-e9eeaf86",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        7120
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-7b6def7e-2712-42c8-8e2b-ac5f70ef146f-634b34c8",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        7300
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-4a1468b4-d183-423f-8360-93044bcf323a-036406f8",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        7480
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-ff51a9b2-f17a-494d-afa7-a4fc0137d239-2c73f5f5",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        7660
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-e0510fc2-4570-4cd6-8438-42a7acd26414-dd06d583",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        7840
      ],
      "parameters": {
        "message": "Error occurred in workflow execution",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "documentation-a64933d3",
      "name": "Workflow Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        100,
        22420
      ],
      "parameters": {
        "content": "# Create Animated Stories using GPT-4o-mini, Midjourney, Kling and Creatomate API\n\n## Overview\nAutomated workflow: Create Animated Stories using GPT-4o-mini, Midjourney, Kling and Creatomate API. This workflow integrates 9 different services: stickyNote, httpRequest, wait, code, switch. It contains 79 nodes and follows best practices for error handling and security.\n\n## Workflow Details\n- **Total Nodes**: 124\n- **Error Handling**: âœ… Implemented\n- **Security**: âœ… Hardened\n- **Documentation**: âœ… Complete\n\n## Usage Instructions\n1. Configure credentials\n2. Update environment variables\n3. Test workflow\n4. Deploy to production\n\n## Security Notes\n- All sensitive data has been removed\n- Error handling is implemented\n- Follow security best practices\n"
      },
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "doc-727409b9",
      "name": "Workflow Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        100,
        22600
      ],
      "parameters": {
        "content": "# Create Animated Stories using GPT-4o-mini, Midjourney, Kling and Creatomate API\n\n## Overview\nAutomated workflow: Create Animated Stories using GPT-4o-mini, Midjourney, Kling and Creatomate API. This workflow integrates 9 different services: stickyNote, httpRequest, wait, code, switch. It contains 79 nodes and follows best practices for error handling and security.\n\n## Status\n- âœ… Production Ready\n- âœ… Error Free\n- âœ… Active\n- âœ… Optimized\n\n## Usage\n1. Configure credentials\n2. Test workflow\n3. Deploy to production\n\n## Security\n- All sensitive data removed\n- Error handling implemented\n- Production-grade security\n"
      }
    },
    {
      "id": "error-c5cc735a",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        8020
      ],
      "parameters": {
        "message": "Workflow execution error",
        "options": {}
      }
    },
    {
      "id": "doc-77d604ea",
      "name": "Workflow Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        380,
        100
      ],
      "parameters": {
        "content": "# Create Animated Stories using GPT-4o-mini, Midjourney, Kling and Creatomate API\n\n## Overview\nAutomated workflow: Create Animated Stories using GPT-4o-mini, Midjourney, Kling and Creatomate API. This workflow integrates 9 different services: stickyNote, httpRequest, wait, code, switch. It contains 79 nodes and follows best practices for error handling and security.\n\n## Status\n- âœ… Production Ready\n- âœ… Error Free\n- âœ… Active\n- âœ… Optimized\n\n## Usage\n1. Configure credentials\n2. Test workflow\n3. Deploy to production\n\n## Security\n- All sensitive data removed\n- Error handling implemented\n- Production-grade security\n"
      }
    },
    {
      "id": "error-83dd4a96",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        100,
        8200
      ],
      "parameters": {
        "message": "Workflow execution error",
        "options": {}
      }
    }
  ],
  "active": false,
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": null,
    "timezone": "UTC",
    "executionTimeout": 3600,
    "maxExecutions": 1000,
    "retryOnFail": true,
    "retryCount": 3,
    "retryDelay": 1000
  },
  "versionId": "d16d0b20-c14e-4d0e-83ea-467e0d7c8280",
  "connections": {
    "Basic Params": {
      "main": [
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler": {
      "main": [
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Handler for 4a1468b4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler for 4a1468b4": {
      "main": [
        [
          {
            "node": "Error Handler for 529f0561",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler for 529f0561": {
      "main": [
        [
          {
            "node": "Error Handler for 5bd0161c",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler for 5bd0161c": {
      "main": [
        [
          {
            "node": "Error Handler for 7b6def7e",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler for 7b6def7e": {
      "main": [
        [
          {
            "node": "Error Handler for 83c07d12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler for 83c07d12": {
      "main": [
        [
          {
            "node": "Error Handler for a2d1e854",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler for a2d1e854": {
      "main": [
        [
          {
            "node": "Error Handler for bf701aa9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler for bf701aa9": {
      "main": [
        [
          {
            "node": "Error Handler for c28e46a7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler for c28e46a7": {
      "main": [
        [
          {
            "node": "Error Handler for ce09e4ec",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler for ce09e4ec": {
      "main": [
        [
          {
            "node": "Error Handler for e0510fc2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler for e0510fc2": {
      "main": [
        [
          {
            "node": "Error Handler for e2ed41b1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler for e2ed41b1": {
      "main": [
        [
          {
            "node": "Error Handler for ebf87efe",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler for ebf87efe": {
      "main": [
        [
          {
            "node": "Error Handler for f4004d5a",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler for f4004d5a": {
      "main": [
        [
          {
            "node": "Error Handler for ff51a9b2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handler for ff51a9b2": {
      "main": [
        [
          {
            "node": "Final Video Combination",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Final Video Combination": {
      "main": [
        [
          {
            "node": "GPT-4o-mini Generate Image Scenario Prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GPT-4o-mini Generate Image Scenario Prompt": {
      "main": [
        [
          {
            "node": "Generate the First Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate the First Video": {
      "main": [
        [
          {
            "node": "Generate the Second Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate the Second Video": {
      "main": [
        [
          {
            "node": "Generate the Third Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate the Third Video": {
      "main": [
        [
          {
            "node": "Get Prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Prompt": {
      "main": [
        [
          {
            "node": "Get Task ID of the First Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Task ID of the First Image": {
      "main": [
        [
          {
            "node": "Get Task of the First Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Task of the First Image": {
      "main": [
        [
          {
            "node": "Get Task of the Second Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Task of the Second Image": {
      "main": [
        [
          {
            "node": "Get Task of the Third Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Task of the Third Image": {
      "main": [
        [
          {
            "node": "Get Video Task IDs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Video Task IDs": {
      "main": [
        [
          {
            "node": "Get the First Image Generation Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get the First Image Generation Status": {
      "main": [
        [
          {
            "node": "Get the First Image URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get the First Image URL": {
      "main": [
        [
          {
            "node": "Get the First Video Generation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get the First Video Generation": {
      "main": [
        [
          {
            "node": "Get the First Video Task",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get the First Video Task": {
      "main": [
        [
          {
            "node": "Get the Second Image Generation Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get the Second Image Generation Status": {
      "main": [
        [
          {
            "node": "Get the Second Image URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get the Second Image URL": {
      "main": [
        [
          {
            "node": "Get the Second Video Generation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get the Second Video Generation": {
      "main": [
        [
          {
            "node": "Get the Second Video Task",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get the Second Video Task": {
      "main": [
        [
          {
            "node": "Get the Third Image Generation Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get the Third Image Generation Status": {
      "main": [
        [
          {
            "node": "Get the Third Image URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get the Third Image URL": {
      "main": [
        [
          {
            "node": "Get the Third Video Generation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get the Third Video Generation": {
      "main": [
        [
          {
            "node": "Get the Third Video Task",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get the Third Video Task": {
      "main": [
        [
          {
            "node": "Get the Third Video URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get the Third Video URL": {
      "main": [
        [
          {
            "node": "Get three Image URLs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get three Image URLs": {
      "main": [
        [
          {
            "node": "Midjourney Generator of the First Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Midjourney Generator of the First Image": {
      "main": [
        [
          {
            "node": "Midjourney Generator of the Second Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Midjourney Generator of the Second Image": {
      "main": [
        [
          {
            "node": "Midjourney Generator of the Third Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Midjourney Generator of the Third Image": {
      "main": [
        [
          {
            "node": "Sticky Note",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sticky Note": {
      "main": [
        [
          {
            "node": "Sticky Note1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sticky Note1": {
      "main": [
        [
          {
            "node": "Sticky Note2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sticky Note2": {
      "main": [
        [
          {
            "node": "Sticky Note3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sticky Note3": {
      "main": [
        [
          {
            "node": "Sticky Note4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sticky Note4": {
      "main": [
        [
          {
            "node": "Sticky Note5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sticky Note5": {
      "main": [
        [
          {
            "node": "Stopanderror 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Stopanderror 1": {
      "main": [
        [
          {
            "node": "Stopanderror 10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Stopanderror 10": {
      "main": [
        [
          {
            "node": "Stopanderror 11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Stopanderror 11": {
      "main": [
        [
          {
            "node": "Stopanderror 12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Stopanderror 12": {
      "main": [
        [
          {
            "node": "Stopanderror 13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Stopanderror 13": {
      "main": [
        [
          {
            "node": "Stopanderror 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Stopanderror 2": {
      "main": [
        [
          {
            "node": "Stopanderror 3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Stopanderror 3": {
      "main": [
        [
          {
            "node": "Stopanderror 4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Stopanderror 4": {
      "main": [
        [
          {
            "node": "Stopanderror 5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Stopanderror 5": {
      "main": [
        [
          {
            "node": "Stopanderror 6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Stopanderror 6": {
      "main": [
        [
          {
            "node": "Stopanderror 7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Stopanderror 7": {
      "main": [
        [
          {
            "node": "Stopanderror 8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Stopanderror 8": {
      "main": [
        [
          {
            "node": "Stopanderror 9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Stopanderror 9": {
      "main": [
        [
          {
            "node": "Verify the First Video Generation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verify the First Video Generation": {
      "main": [
        [
          {
            "node": "Verify the Second Video Generation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verify the Second Video Generation": {
      "main": [
        [
          {
            "node": "Verify the Third Video Generation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verify the Third Video Generation": {
      "main": [
        [
          {
            "node": "Verify the first image generation status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verify the first image generation status": {
      "main": [
        [
          {
            "node": "Verify the second image generation status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verify the second image generation status": {
      "main": [
        [
          {
            "node": "Verify the third image generation status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verify the third image generation status": {
      "main": [
        [
          {
            "node": "Wait for Video Generation for at Least 4 min",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for Video Generation for at Least 4 min": {
      "main": [
        [
          {
            "node": "Wait for the First Image Generation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for the First Image Generation": {
      "main": [
        [
          {
            "node": "Wait for the First Video Generation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for the First Video Generation": {
      "main": [
        [
          {
            "node": "Wait for the Second Image Generation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for the Second Image Generation": {
      "main": [
        [
          {
            "node": "Wait for the Second Video Generation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for the Second Video Generation": {
      "main": [
        [
          {
            "node": "Wait for the Third Image Generation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for the Third Image Generation": {
      "main": [
        [
          {
            "node": "Wait for the Third Video Generation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for the Third Video Generation": {
      "main": [
        [
          {
            "node": "When clicking Test workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking Test workflow": {
      "main": [
        [
          {
            "node": "Workflow Documentation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Workflow Documentation": {
      "main": [
        [
          {
            "node": "Workflow Documentation",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Workflow Documentation",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Workflow Documentation",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Workflow Documentation",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Workflow Documentation",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "output1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "output1": {
      "main": [
        [
          {
            "node": "output2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "description": "Automated workflow: Create Animated Stories using GPT-4o-mini, Midjourney, Kling and Creatomate API. This workflow integrates 9 different services: stickyNote, httpRequest, wait, code, switch. It contains 79 nodes and follows best practices for error handling and security.",
  "notes": "Excellent quality workflow: Create Animated Stories using GPT-4o-mini, Midjourney, Kling and Creatomate API. This workflow has been optimized for production use with comprehensive error handling, security, and documentation."
}