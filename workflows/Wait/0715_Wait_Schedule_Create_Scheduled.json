{
  "meta": {
    "instanceId": "workflow-69701d84",
    "versionId": "1.0.0",
    "createdAt": "2025-09-29T07:07:58.775353",
    "updatedAt": "2025-09-29T07:07:58.775371",
    "owner": "n8n-user",
    "license": "MIT",
    "category": "automation",
    "status": "active",
    "priority": "high",
    "environment": "production"
  },
  "nodes": [
    {
      "id": "c9e46f43-b159-42ca-945d-7aa8546e5fa2",
      "name": "Get playlist snapshot",
      "type": "n8n-nodes-base.spotify",
      "position": [
        380,
        1580
      ],
      "parameters": {
        "id": "={{ $json.spotify_playlist_id }}",
        "resource": "playlist",
        "operation": "get"
      },
      "typeVersion": 1,
      "notes": "This spotify node performs automated tasks as part of the workflow."
    },
    {
      "id": "73c2303e-24c2-4026-95f6-825e5d08baa4",
      "name": "Get playlist snapshot1",
      "type": "n8n-nodes-base.spotify",
      "position": [
        720,
        1580
      ],
      "parameters": {
        "id": "={{ $('variables').item.json.spotify_playlist_id }}",
        "resource": "playlist",
        "operation": "get"
      },
      "typeVersion": 1,
      "notes": "This spotify node performs automated tasks as part of the workflow."
    },
    {
      "id": "bb71003b-0945-4333-91d3-662290dfb42d",
      "name": "If different snapshot",
      "type": "n8n-nodes-base.if",
      "position": [
        900,
        1580
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 1,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "2606c811-7c92-4c61-b99e-be2aaced10dd",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              },
              "leftValue": "={{ $('Get playlist snapshot').item.json.snapshot_id }}",
              "rightValue": "={{ $json.snapshot_id }}"
            }
          ]
        }
      },
      "typeVersion": 2,
      "notes": "This if node performs automated tasks as part of the workflow."
    },
    {
      "id": "4894d2a7-dda9-430f-849a-d2368daa0aab",
      "name": "Get all musics",
      "type": "n8n-nodes-base.supabase",
      "position": [
        1220,
        1600
      ],
      "parameters": {
        "tableId": "={{ (() => { try { return $('variables').item.json.supabase_table_name } catch(e) {} try { return $('variables2').item.json.supabase_table_name } catch(e) {} return undefined; })() }}",
        "operation": "getAll",
        "returnAll": true
      },
      "typeVersion": 1,
      "notes": "This supabase node performs automated tasks as part of the workflow."
    },
    {
      "id": "e854147b-a5fa-400d-8440-bda25a0226b2",
      "name": "Update to_delete to true",
      "type": "n8n-nodes-base.supabase",
      "position": [
        1700,
        1620
      ],
      "parameters": {
        "filters": {
          "conditions": [
            {
              "keyName": "YOUR_CREDENTIAL_HERE",
              "keyValue": "YOUR_CREDENTIAL_HERE",
              "condition": "eq"
            }
          ]
        },
        "tableId": "={{ (() => { try { return $('variables').item.json.supabase_table_name } catch(e) {} try { return $('variables2').item.json.supabase_table_name } catch(e) {} return undefined; })() }}",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "to_delete",
              "fieldValue": "TRUE"
            }
          ]
        },
        "operation": "update"
      },
      "typeVersion": 1,
      "notes": "This supabase node performs automated tasks as part of the workflow."
    },
    {
      "id": "2425db39-487b-4b61-9b61-9ae00067bbca",
      "name": "Add music",
      "type": "n8n-nodes-base.supabase",
      "position": [
        1700,
        1400
      ],
      "parameters": {
        "tableId": "={{ (() => { try { return $('variables').item.json.supabase_table_name } catch(e) {} try { return $('variables2').item.json.supabase_table_name } catch(e) {} return undefined; })() }}\n",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "id",
              "fieldValue": "={{ $json.track.id }}"
            },
            {
              "fieldId": "title",
              "fieldValue": "={{ $json.track.name }}"
            },
            {
              "fieldId": "artist",
              "fieldValue": "={{ $json.track.artists[0].name }}"
            },
            {
              "fieldId": "duration",
              "fieldValue": "={{ $json.track.duration_ms }}"
            }
          ]
        }
      },
      "typeVersion": 1,
      "alwaysOutputData": false,
      "notes": "This supabase node performs automated tasks as part of the workflow."
    },
    {
      "id": "1c28ae15-9049-4ac7-9a7f-dcd094a60ace",
      "name": "Compare Datasets",
      "type": "n8n-nodes-base.compareDatasets",
      "position": [
        1460,
        1540
      ],
      "parameters": {
        "options": {
          "skipFields": "title, artists, duration, youtube_video_id, added_at, added_by, is_local, primary_color, video_thumbnail,"
        },
        "mergeByFields": {
          "values": [
            {
              "field1": "track.id",
              "field2": "id"
            }
          ]
        }
      },
      "typeVersion": 2.3,
      "notes": "This compareDatasets node performs automated tasks as part of the workflow."
    },
    {
      "id": "af89d454-1071-42c1-9455-d64e02ae14b7",
      "name": "Spotify",
      "type": "n8n-nodes-base.spotify",
      "position": [
        1220,
        1440
      ],
      "parameters": {
        "id": "={{ (() => { try { return $('variables').item.json.spotify_playlist_id } catch(e) {} try { return $('variables2').item.json.spotify_playlist_id } catch(e) {} return undefined; })() }}",
        "resource": "playlist",
        "operation": "getTracks",
        "returnAll": true
      },
      "typeVersion": 1,
      "notes": "This spotify node performs automated tasks as part of the workflow."
    },
    {
      "id": "b924ad92-b1f2-41d5-b662-1e64ad0cc6dc",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1220,
        1800
      ],
      "parameters": {},
      "typeVersion": 1,
      "notes": "This noOp node performs automated tasks as part of the workflow."
    },
    {
      "id": "2665982e-68ac-4a83-988d-78d07a0d6c75",
      "name": "Get all musics not in youtube playlist",
      "type": "n8n-nodes-base.supabase",
      "position": [
        400,
        960
      ],
      "parameters": {
        "filters": {
          "conditions": [
            {
              "keyName": "YOUR_CREDENTIAL_HERE",
              "keyValue": "YOUR_CREDENTIAL_HERE",
              "condition": "is"
            },
            {
              "keyName": "YOUR_CREDENTIAL_HERE",
              "keyValue": "YOUR_CREDENTIAL_HERE",
              "condition": "is"
            }
          ]
        },
        "tableId": "={{ $json.supabase_table_name }}",
        "matchType": "allFilters",
        "operation": "getAll",
        "returnAll": true
      },
      "typeVersion": 1,
      "notes": "This supabase node performs automated tasks as part of the workflow."
    },
    {
      "id": "6ea4ae11-9889-4ae2-904f-614ca4118b8a",
      "name": "Every day at noon",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        20,
        1220
      ],
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 12
            }
          ]
        }
      },
      "typeVersion": 1.2,
      "notes": "This scheduleTrigger node performs automated tasks as part of the workflow."
    },
    {
      "id": "8e4b14f4-a7ec-45dd-9b24-8c86889fd135",
      "name": "Every day at noon + 1mn",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        20,
        960
      ],
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 12,
              "triggerAtMinute": 1
            }
          ]
        }
      },
      "typeVersion": 1.2,
      "notes": "This scheduleTrigger node performs automated tasks as part of the workflow."
    },
    {
      "id": "16242250-5f3f-49f9-b6cb-7302bc11765a",
      "name": "Every hour",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        20,
        1580
      ],
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours"
            }
          ]
        }
      },
      "typeVersion": 1.2,
      "notes": "This scheduleTrigger node performs automated tasks as part of the workflow."
    },
    {
      "id": "6b6784ce-e236-40ca-b85c-1b0f0abdd7a5",
      "name": "Wait 1 hour",
      "type": "n8n-nodes-base.wait",
      "position": [
        560,
        1580
      ],
      "webhookId": "7d71bd21-a70a-47d5-bde5-299299fdb84e",
      "parameters": {
        "unit": "hours",
        "amount": 1
      },
      "typeVersion": 1.1,
      "notes": "This wait node performs automated tasks as part of the workflow."
    },
    {
      "id": "746e7e33-00ba-4e92-a877-3619e14fa718",
      "name": "variables",
      "type": "n8n-nodes-base.set",
      "position": [
        200,
        1580
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "89615f0d-1f93-4416-bab4-1c69479e135e",
              "name": "spotify_playlist_id",
              "type": "string",
              "value": "4fjIxvQt8aQrQZs4XqvsmR"
            },
            {
              "id": "be22a9a9-58be-4275-aac5-c0d95ba91cfd",
              "name": "youtube_playlist_id",
              "type": "string",
              "value": "PLjmwnzu1gWRsnW6icKeUyvbaK9-Cs8oom"
            },
            {
              "id": "3536712c-8881-4089-98aa-e25516fea624",
              "name": "supabase_table_name",
              "type": "string",
              "value": "musics"
            }
          ]
        }
      },
      "typeVersion": 3.4,
      "notes": "This set node performs automated tasks as part of the workflow."
    },
    {
      "id": "0006e12a-fea6-408d-bcf5-6d0a726322b1",
      "name": "Search video",
      "type": "n8n-nodes-base.youTube",
      "position": [
        2500,
        1420
      ],
      "parameters": {
        "limit": 5,
        "filters": {
          "q": "={{ $json.title }} {{ '-' }} {{ $json.artist }}"
        },
        "options": {},
        "resource": "video"
      },
      "typeVersion": 1,
      "alwaysOutputData": true,
      "notes": "This youTube node performs automated tasks as part of the workflow."
    },
    {
      "id": "24f5a360-fa93-4942-baea-baf134dd40a3",
      "name": "Get video duration",
      "type": "n8n-nodes-base.youTube",
      "position": [
        3020,
        1420
      ],
      "parameters": {
        "part": [
          "contentDetails",
          "snippet"
        ],
        "options": {},
        "videoId": "={{ $json.id.videoId }}",
        "resource": "video",
        "operation": "get"
      },
      "typeVersion": 1,
      "notes": "This youTube node performs automated tasks as part of the workflow."
    },
    {
      "id": "2027d659-01d6-4dd0-bfdc-c92f65b021bc",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        2840,
        1420
      ],
      "parameters": {
        "options": {}
      },
      "typeVersion": 3,
      "notes": "This splitInBatches node performs automated tasks as part of the workflow."
    },
    {
      "id": "3e843f70-bc17-4749-86ba-11f5a0e98e7d",
      "name": "If video duration ~= music duration",
      "type": "n8n-nodes-base.if",
      "position": [
        3240,
        1420
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 1,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "e8ed16f1-f0c6-4ef4-bf09-8ecb6fbf44cb",
              "operator": {
                "type": "number",
                "operation": "gt"
              },
              "leftValue": "={{ $json.contentDetails.duration.match(/(\\d+)(?=[MHS])/g).reduce((acc, time, i) => acc + time * [60000, 1000, 1][i], 0) }}",
              "rightValue": "={{ $('data1').first().json.duration - 5000}}"
            },
            {
              "id": "c4317b05-69bb-4244-ac8a-4cc51113a63b",
              "operator": {
                "type": "number",
                "operation": "lt"
              },
              "leftValue": "={{ $json.contentDetails.duration.match(/(\\d+)(?=[MHS])/g).reduce((acc, time, i) => acc + time * [60000, 1000, 1][i], 0) }}",
              "rightValue": "={{ $('data1').first().json.duration + 20000}}"
            }
          ]
        }
      },
      "typeVersion": 2,
      "notes": "This if node performs automated tasks as part of the workflow."
    },
    {
      "id": "a21e462c-72c9-4e77-99dc-1046acbaa998",
      "name": "Add music to playlist",
      "type": "n8n-nodes-base.youTube",
      "position": [
        3460,
        1400
      ],
      "parameters": {
        "options": {},
        "videoId": "={{ $('Get video duration').item.json.id }}",
        "resource": "playlistItem",
        "playlistId": "PLjmwnzu1gWRsnW6icKeUyvbaK9-Cs8oom"
      },
      "typeVersion": 1,
      "notes": "This youTube node performs automated tasks as part of the workflow."
    },
    {
      "id": "68fc1180-ce51-496a-909f-a652bb43febc",
      "name": "Add youtube id to row",
      "type": "n8n-nodes-base.supabase",
      "position": [
        3640,
        1400
      ],
      "parameters": {
        "filters": {
          "conditions": [
            {
              "keyName": "YOUR_CREDENTIAL_HERE",
              "keyValue": "YOUR_CREDENTIAL_HERE",
              "condition": "eq"
            }
          ]
        },
        "tableId": "={{ $('data1').first().json.supabase_table_name }}",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "youtube_video_id",
              "fieldValue": "={{ $json.snippet.resourceId.videoId }}"
            }
          ]
        },
        "operation": "update"
      },
      "typeVersion": 1,
      "notes": "This supabase node performs automated tasks as part of the workflow."
    },
    {
      "id": "3611f50e-3000-46e9-b145-109251c3a12d",
      "name": "Discord",
      "type": "n8n-nodes-base.discord",
      "position": [
        4040,
        1400
      ],
      "parameters": {
        "content": "=Added : {{ $json.title }} ({{ $env.WEBHOOK_URL }}{{ $json.youtube_video_id }})",
        "options": {},
        "authentication": "{{ $credentials.webhook }}"
      },
      "typeVersion": 2,
      "notes": "This discord node performs automated tasks as part of the workflow."
    },
    {
      "id": "bd6438b2-8628-4bb9-be34-03785458f194",
      "name": "Discord1",
      "type": "n8n-nodes-base.discord",
      "position": [
        4040,
        1020
      ],
      "parameters": {
        "content": "=No match for : {{ $('data1').first().json.title }}",
        "options": {},
        "authentication": "{{ $credentials.webhook }}"
      },
      "typeVersion": 2,
      "notes": "This discord node performs automated tasks as part of the workflow."
    },
    {
      "id": "97ea9e76-96a5-48de-afe3-f81dbe7e431b",
      "name": "Set youtube id to NOTFOUND if no matching",
      "type": "n8n-nodes-base.supabase",
      "position": [
        3320,
        1020
      ],
      "parameters": {
        "filters": {
          "conditions": [
            {
              "keyName": "YOUR_CREDENTIAL_HERE",
              "keyValue": "YOUR_CREDENTIAL_HERE",
              "condition": "eq"
            }
          ]
        },
        "tableId": "={{ $('data1').first().json.supabase_table_name }}",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "youtube_video_id",
              "fieldValue": "NOTFOUND"
            }
          ]
        },
        "matchType": "allFilters",
        "operation": "update"
      },
      "typeVersion": 1,
      "notes": "This supabase node performs automated tasks as part of the workflow."
    },
    {
      "id": "acb1e31e-5f17-4092-b357-b0b255a4d15f",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "position": [
        3060,
        1220
      ],
      "parameters": {
        "options": {},
        "aggregate": "aggregateAllItemData"
      },
      "typeVersion": 1,
      "notes": "This aggregate node performs automated tasks as part of the workflow."
    },
    {
      "id": "2db8c163-bf26-445f-9339-9e387cf22286",
      "name": "If no result",
      "type": "n8n-nodes-base.if",
      "position": [
        2660,
        1420
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 1,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "49a188bb-3cc8-4a8d-babf-f591c2e72094",
              "operator": {
                "type": "object",
                "operation": "empty",
                "singleValue": true
              },
              "leftValue": "={{ $json }}",
              "rightValue": ""
            }
          ]
        }
      },
      "typeVersion": 2,
      "notes": "This if node performs automated tasks as part of the workflow."
    },
    {
      "id": "5eea12d7-c313-4176-b85a-54f631e3a98f",
      "name": "data",
      "type": "n8n-nodes-base.set",
      "position": [
        1900,
        1340
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "3622fecd-9a77-4cd4-ab02-6997cd83362d",
              "name": "title",
              "type": "string",
              "value": "={{ $json.title }}"
            },
            {
              "id": "76232c1e-f4de-41c4-837f-d20bd2bcfca2",
              "name": "artist",
              "type": "string",
              "value": "={{ $json.artist }}"
            },
            {
              "id": "01c3e160-f1ce-42e9-9010-a8ac806bb029",
              "name": "duration",
              "type": "number",
              "value": "={{ $json.duration }}"
            },
            {
              "id": "65f29ba5-28b4-4b50-8d38-540236229312",
              "name": "id",
              "type": "string",
              "value": "={{ $json.id }}"
            },
            {
              "id": "d6b26130-454c-4625-bdf2-688498d61321",
              "name": "supabase_table_name",
              "type": "string",
              "value": "={{ (() => { try { return $('variables').item.json.supabase_table_name } catch(e) {} try { return $('variables1').item.json.supabase_table_name } catch(e) {} try { return $('variables2').item.json.supabase_table_name } catch(e) {} return undefined; })() }}\n"
            },
            {
              "id": "9d82b3d1-b9f9-4dc1-9e7f-ec2a3c97bfe1",
              "name": "youtube_playlist_id",
              "type": "string",
              "value": "={{ (() => { try { return $('variables').item.json.youtube_playlist_id } catch(e) {} try { return $('variables1').item.json.youtube_playlist_id } catch(e) {} try { return $('variables2').item.json.youtube_playlist_id } catch(e) {} return undefined; })() }}\n"
            }
          ]
        }
      },
      "typeVersion": 3.4,
      "notes": "This set node performs automated tasks as part of the workflow."
    },
    {
      "id": "73055f49-c804-4b54-a16f-c795f1295069",
      "name": "variables2",
      "type": "n8n-nodes-base.set",
      "position": [
        560,
        1220
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "89615f0d-1f93-4416-bab4-1c69479e135e",
              "name": "spotify_playlist_id",
              "type": "string",
              "value": "4fjIxvQt8aQrQZs4XqvsmR"
            },
            {
              "id": "be22a9a9-58be-4275-aac5-c0d95ba91cfd",
              "name": "youtube_playlist_id",
              "type": "string",
              "value": "PLjmwnzu1gWRsnW6icKeUyvbaK9-Cs8oom"
            },
            {
              "id": "3536712c-8881-4089-98aa-e25516fea624",
              "name": "supabase_table_name",
              "type": "string",
              "value": "musics"
            }
          ]
        }
      },
      "typeVersion": 3.4,
      "notes": "This set node performs automated tasks as part of the workflow."
    },
    {
      "id": "4f7da7fb-5b18-4b44-9aad-d24c2e1409cc",
      "name": "variables1",
      "type": "n8n-nodes-base.set",
      "position": [
        200,
        960
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "89615f0d-1f93-4416-bab4-1c69479e135e",
              "name": "spotify_playlist_id",
              "type": "string",
              "value": "4fjIxvQt8aQrQZs4XqvsmR"
            },
            {
              "id": "be22a9a9-58be-4275-aac5-c0d95ba91cfd",
              "name": "youtube_playlist_id",
              "type": "string",
              "value": "PLjmwnzu1gWRsnW6icKeUyvbaK9-Cs8oom"
            },
            {
              "id": "3536712c-8881-4089-98aa-e25516fea624",
              "name": "supabase_table_name",
              "type": "string",
              "value": "musics"
            }
          ]
        }
      },
      "typeVersion": 3.4,
      "notes": "This set node performs automated tasks as part of the workflow."
    },
    {
      "id": "a814763e-d073-4984-986f-7c627bbe2269",
      "name": "Loop Over Items1",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        2120,
        1400
      ],
      "parameters": {
        "options": {}
      },
      "typeVersion": 3,
      "notes": "This splitInBatches node performs automated tasks as part of the workflow."
    },
    {
      "id": "5329c838-56bd-4d85-a789-7ded3a128d87",
      "name": "data1",
      "type": "n8n-nodes-base.set",
      "position": [
        2320,
        1420
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "3622fecd-9a77-4cd4-ab02-6997cd83362d",
              "name": "title",
              "type": "string",
              "value": "={{ $json.title }}"
            },
            {
              "id": "76232c1e-f4de-41c4-837f-d20bd2bcfca2",
              "name": "artist",
              "type": "string",
              "value": "={{ $json.artist }}"
            },
            {
              "id": "01c3e160-f1ce-42e9-9010-a8ac806bb029",
              "name": "duration",
              "type": "number",
              "value": "={{ $json.duration }}"
            },
            {
              "id": "65f29ba5-28b4-4b50-8d38-540236229312",
              "name": "id",
              "type": "string",
              "value": "={{ $json.id }}"
            },
            {
              "id": "d6b26130-454c-4625-bdf2-688498d61321",
              "name": "supabase_table_name",
              "type": "string",
              "value": "={{ $json.supabase_table_name }}"
            },
            {
              "id": "9d82b3d1-b9f9-4dc1-9e7f-ec2a3c97bfe1",
              "name": "youtube_playlist_id",
              "type": "string",
              "value": "={{ $json.youtube_playlist_id }}"
            }
          ]
        }
      },
      "typeVersion": 3.4,
      "notes": "This set node performs automated tasks as part of the workflow."
    },
    {
      "id": "01039cab-f822-4cfc-996f-0e88923f9c14",
      "name": "Get playlist items",
      "type": "n8n-nodes-base.youTube",
      "position": [
        540,
        2600
      ],
      "parameters": {
        "options": {},
        "resource": "playlistItem",
        "operation": "getAll",
        "returnAll": true,
        "playlistId": "={{ $json.youtube_playlist_id }}"
      },
      "typeVersion": 1,
      "notes": "This youTube node performs automated tasks as part of the workflow."
    },
    {
      "id": "c12fb59f-ad15-4456-b827-f749a22f2f0c",
      "name": "Playlist items to be deleted",
      "type": "n8n-nodes-base.compareDatasets",
      "position": [
        840,
        2700
      ],
      "parameters": {
        "options": {
          "skipFields": "kind, etag, snippet, thumbnails, channelTitle, position, resourceId, contentDetails, status"
        },
        "mergeByFields": {
          "values": [
            {
              "field1": "snippet.resourceId.videoId",
              "field2": "youtube_video_id"
            }
          ]
        }
      },
      "typeVersion": 2.3,
      "notes": "This compareDatasets node performs automated tasks as part of the workflow."
    },
    {
      "id": "57172162-a766-4c51-8249-e6e0632d1312",
      "name": "Get all musics that should be in playlist",
      "type": "n8n-nodes-base.supabase",
      "position": [
        540,
        2400
      ],
      "parameters": {
        "filters": {
          "conditions": [
            {
              "keyName": "YOUR_CREDENTIAL_HERE",
              "keyValue": "YOUR_CREDENTIAL_HERE",
              "condition": "neq"
            },
            {
              "keyName": "YOUR_CREDENTIAL_HERE",
              "keyValue": "YOUR_CREDENTIAL_HERE",
              "condition": "neq"
            }
          ]
        },
        "tableId": "={{ $json.supabase_table_name }}",
        "matchType": "allFilters",
        "operation": "getAll",
        "returnAll": true
      },
      "typeVersion": 1,
      "notes": "This supabase node performs automated tasks as part of the workflow."
    },
    {
      "id": "88f01cff-33a2-4184-af92-80cf7dd6d28b",
      "name": "Remove Duplicates",
      "type": "n8n-nodes-base.removeDuplicates",
      "position": [
        1080,
        2700
      ],
      "parameters": {
        "compare": "selectedFields",
        "options": {},
        "fieldsToCompare": "different.youtube_video_id.inputB"
      },
      "typeVersion": 1.1,
      "notes": "This removeDuplicates node performs automated tasks as part of the workflow."
    },
    {
      "id": "e25d78cd-d3a9-4b24-8663-84344b6f0b68",
      "name": "Remove video from playlist",
      "type": "n8n-nodes-base.youTube",
      "position": [
        1240,
        2700
      ],
      "parameters": {
        "options": {},
        "resource": "playlistItem",
        "operation": "delete",
        "playlistItemId": "={{ $json.different.id.inputA }}"
      },
      "typeVersion": 1,
      "notes": "This youTube node performs automated tasks as part of the workflow."
    },
    {
      "id": "1420795b-fac4-47ac-8449-96ae39541c22",
      "name": "Check for deleted videos",
      "type": "n8n-nodes-base.compareDatasets",
      "position": [
        820,
        2480
      ],
      "parameters": {
        "options": {
          "skipFields": "kind, etag, snippet, thumbnails, channelTitle, position, resourceId, contentDetails, status"
        },
        "mergeByFields": {
          "values": [
            {
              "field1": "youtube_video_id",
              "field2": "contentDetails.videoId"
            }
          ]
        }
      },
      "typeVersion": 2.3,
      "notes": "This compareDatasets node performs automated tasks as part of the workflow."
    },
    {
      "id": "fc2e2908-c491-4d45-87e4-a572a2f3e72a",
      "name": "Set youtube_video_id to null",
      "type": "n8n-nodes-base.supabase",
      "onError": "continueRegularOutput",
      "position": [
        1080,
        2440
      ],
      "parameters": {
        "filters": {
          "conditions": [
            {
              "keyName": "YOUR_CREDENTIAL_HERE",
              "keyValue": "YOUR_CREDENTIAL_HERE",
              "condition": "eq"
            },
            {
              "keyName": "YOUR_CREDENTIAL_HERE",
              "keyValue": "YOUR_CREDENTIAL_HERE",
              "condition": "neq"
            }
          ]
        },
        "tableId": "={{ $('variables3').item.json.supabase_table_name }}",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "youtube_video_id",
              "fieldValue": "={{ null }}"
            }
          ]
        },
        "matchType": "allFilters",
        "operation": "update"
      },
      "typeVersion": 1,
      "notes": "This supabase node performs automated tasks as part of the workflow."
    },
    {
      "id": "52523569-4347-477f-abe3-718b0177324a",
      "name": "Get all musics to be deleted",
      "type": "n8n-nodes-base.supabase",
      "position": [
        540,
        2820
      ],
      "parameters": {
        "filters": {
          "conditions": [
            {
              "keyName": "YOUR_CREDENTIAL_HERE",
              "keyValue": "YOUR_CREDENTIAL_HERE",
              "condition": "is"
            },
            {
              "keyName": "YOUR_CREDENTIAL_HERE",
              "keyValue": "YOUR_CREDENTIAL_HERE",
              "condition": "neq"
            }
          ]
        },
        "tableId": "={{ $json.supabase_table_name }}",
        "matchType": "allFilters",
        "operation": "getAll",
        "returnAll": true
      },
      "typeVersion": 1,
      "notes": "This supabase node performs automated tasks as part of the workflow."
    },
    {
      "id": "c1306c1e-07aa-46f9-970c-3e9ecb01638a",
      "name": "Delete music",
      "type": "n8n-nodes-base.supabase",
      "position": [
        1400,
        2700
      ],
      "parameters": {
        "filters": {
          "conditions": [
            {
              "keyName": "YOUR_CREDENTIAL_HERE",
              "keyValue": "YOUR_CREDENTIAL_HERE",
              "condition": "eq"
            },
            {
              "keyName": "YOUR_CREDENTIAL_HERE",
              "keyValue": "YOUR_CREDENTIAL_HERE",
              "condition": "is"
            }
          ]
        },
        "tableId": "={{ $('variables3').item.json.supabase_table_name }}",
        "matchType": "allFilters",
        "operation": "delete"
      },
      "typeVersion": 1,
      "notes": "This supabase node performs automated tasks as part of the workflow."
    },
    {
      "id": "770083fa-6ac1-4dd9-929e-e30e933bbd95",
      "name": "Every day at midnight",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        40,
        2620
      ],
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "typeVersion": 1.2,
      "notes": "This scheduleTrigger node performs automated tasks as part of the workflow."
    },
    {
      "id": "92e5e851-0c66-476e-bec8-a46fc96915ab",
      "name": "variables3",
      "type": "n8n-nodes-base.set",
      "position": [
        240,
        2620
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "89615f0d-1f93-4416-bab4-1c69479e135e",
              "name": "spotify_playlist_id",
              "type": "string",
              "value": "4fjIxvQt8aQrQZs4XqvsmR"
            },
            {
              "id": "be22a9a9-58be-4275-aac5-c0d95ba91cfd",
              "name": "youtube_playlist_id",
              "type": "string",
              "value": "PLjmwnzu1gWRsnW6icKeUyvbaK9-Cs8oom"
            },
            {
              "id": "3536712c-8881-4089-98aa-e25516fea624",
              "name": "supabase_table_name",
              "type": "string",
              "value": "musics"
            }
          ]
        }
      },
      "typeVersion": 3.4,
      "notes": "This set node performs automated tasks as part of the workflow."
    },
    {
      "id": "acde16fc-3fe3-453b-bffe-ead681e97046",
      "name": "Reset NOTFOUND id to NULL",
      "type": "n8n-nodes-base.supabase",
      "position": [
        420,
        3280
      ],
      "parameters": {
        "filters": {
          "conditions": [
            {
              "keyName": "YOUR_CREDENTIAL_HERE",
              "keyValue": "YOUR_CREDENTIAL_HERE",
              "condition": "eq"
            }
          ]
        },
        "tableId": "={{ $json.supabase_table_name }}",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "youtube_video_id",
              "fieldValue": "={{ null }}"
            }
          ]
        },
        "operation": "update"
      },
      "typeVersion": 1,
      "notes": "This supabase node performs automated tasks as part of the workflow."
    },
    {
      "id": "62053829-3253-4a7c-b70f-ba6075df034b",
      "name": "variables4",
      "type": "n8n-nodes-base.set",
      "position": [
        220,
        3280
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "89615f0d-1f93-4416-bab4-1c69479e135e",
              "name": "spotify_playlist_id",
              "type": "string",
              "value": "4fjIxvQt8aQrQZs4XqvsmR"
            },
            {
              "id": "be22a9a9-58be-4275-aac5-c0d95ba91cfd",
              "name": "youtube_playlist_id",
              "type": "string",
              "value": "PLjmwnzu1gWRsnW6icKeUyvbaK9-Cs8oom"
            },
            {
              "id": "3536712c-8881-4089-98aa-e25516fea624",
              "name": "supabase_table_name",
              "type": "string",
              "value": "musics"
            }
          ]
        }
      },
      "typeVersion": 3.4,
      "notes": "This set node performs automated tasks as part of the workflow."
    },
    {
      "id": "9a205a87-f32a-49c1-8282-469777c83c9c",
      "name": "Every month",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        40,
        3280
      ],
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "months"
            }
          ]
        }
      },
      "typeVersion": 1.2,
      "notes": "This scheduleTrigger node performs automated tasks as part of the workflow."
    },
    {
      "id": "a40fa87c-71ae-4045-8285-91235f0cf1f0",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2040,
        780
      ],
      "parameters": {
        "color": 6,
        "width": 1780,
        "height": 980,
        "content": "# Match Spotify Tracks to YouTube Videos  \n\n## This part finds the best YouTube video for a Spotify track using the YouTube Data API v3. It searches with the track title and artist, retrieves the top 5 videos, and selects the first one with a duration within ±10% of the Spotify track length. The matched video is added to a YouTube playlist, and its ID is saved in the database.  \n\n## Operation:\n- ## Uses Spotify data (title + artist) for search.\n- ## Ensures duration accuracy (±10% tolerance).  \n- ## Automates playlist updates and database storage."
      },
      "typeVersion": 1,
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "b850a168-7fa4-417c-980c-da8fcf558cfb",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -20,
        1440
      ],
      "parameters": {
        "color": 4,
        "width": 1100,
        "height": 420,
        "content": "## Check for any modification in the spotify playlist with snapshot_id\n### If you want to change the checking interval, make sure to change the trigger AND the wait node\n"
      },
      "typeVersion": 1,
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "fe2aaa9f-e4de-4000-b535-3e351a643d01",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1360,
        1120
      ],
      "parameters": {
        "color": 3,
        "width": 960,
        "height": 1340,
        "content": "# Spotify to YouTube Playlist Synchronization\n## A workflow that maintains a YouTube playlist in sync with a Spotify playlist, featuring smart video matching and persistent synchronization.\n\n## Key Features\n- **One-way Sync**: Spotify playlist → YouTube playlist (additions and deletions\n- **Continuous Monitoring**: Automatic synchronization (every hour by default, but you can put any time you want)\n- **Smart Video Matching**: Considers video length and content relevance\n- **Auto-Recovery**: Automatically handles deleted YouTube videos\n- **Database Backup**: Persistent storage using Supabase\n\n## Prerequisites\n\n1. Supabase project with the following table structure:\n```sql\nCREATE TABLE IF NOT EXISTS musics (\n    id TEXT PRIMARY KEY,\n    title TEXT NOT NULL,\n    artist TEXT NOT NULL,\n    duration INT8 NOT NULL,\n    youtube_video_id TEXT,\n    to_delete BOOLEAN DEFAULT FALSE\n);\n```\n2. Empty YouTube playlist (recommended as duplicates are not handled)\n3. Configured credentials for YouTube, Spotify, and Supabase APIs\n4. Properly set variables in all \"variables\" nodes (variables, variables1, variables2, variables3, variables4 (all the same))\n5. Activate the workflow !\n\n## Workflow Components\n\n### Workflow 1: Main Sync Process\n1. **Change Detection**\n   - Monitors Spotify playlist for changes\n   - Compares database state with current playlist\n\n2. **Video Matching**\n   - Searches YouTube based on title, artist, and duration\n   - Evaluates top 5 results for best match\n   - Marks unmatched tracks with \"NOTFOUND\"\n   - Notifies user of successful matches and failures\n\n### Workflow 2: YouTube Maintenance\n- Monitors YouTube playlist for removed videos\n- Flags removed videos for re-search\n- Handles deletion of marked videos\n\n### Workflow 3: Recovery Process\n- Clears \"NOTFOUND\" flags periodically to re-search previously unmatched tracks\n\n## Implementation Notes\n- Workflows can be separated into different files for better monitoring\n- Recovery process ensures long-term playlist maintenance\n\n"
      },
      "typeVersion": 1,
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "a86748bf-e52a-4d14-b940-d66a62de802e",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1100,
        700
      ],
      "parameters": {
        "color": 5,
        "width": 920,
        "height": 1260,
        "content": "# Spotify-Database Synchronization\n\n## Operation:\n- ## Compares Spotify playlist tracks against database entries\n- ## Adds missing tracks to database\n- ## Marks database entries for deletion when removed from Spotify playlist"
      },
      "typeVersion": 1,
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "c58d3233-7059-4095-bae7-c0b451748c2f",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -20,
        620
      ],
      "parameters": {
        "width": 800,
        "height": 800,
        "content": "# Daily Force Check\n\n## Forces daily comparison between Spotify playlist and database state, bypassing playlist modification checks. Essential for:\n- ## Initial setup of large playlists (manages YouTube API limits)\n- ## Processing pending tracks when playlist hasn't changed\n- ## Continuing sync attempts for unmatched tracks"
      },
      "typeVersion": 1,
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "cfea38bb-d8b2-48aa-9718-e5d2d36f52c7",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3840,
        780
      ],
      "parameters": {
        "color": 2,
        "width": 460,
        "height": 980,
        "content": "## Optional notifications (you can use the chat of your choice)\n"
      },
      "typeVersion": 1,
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "fb6fa7af-a434-463a-a2d7-e78d0328033c",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -40,
        120
      ],
      "parameters": {
        "color": 7,
        "width": 4400,
        "height": 1880,
        "content": "# Workflow 1: Main Sync Process\n# 1. **Change Detection**\n   - ## Monitors Spotify playlist for changes\n   - ## Compares database state with current playlist\n\n# 2. **Video Matching**\n   - ## Searches YouTube based on title, artist, and duration\n   - ## Evaluates top 5 results for best match\n   - ## Marks unmatched tracks with \"NOTFOUND\"\n   - ## Notifies user of successful matches and failures"
      },
      "typeVersion": 1,
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "03e20125-37c8-4e40-98fd-9b4617eaab70",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -40,
        2200
      ],
      "parameters": {
        "color": 7,
        "width": 1740,
        "height": 800,
        "content": "# Workflow 2: YouTube Maintenance\n- ## Monitors YouTube playlist for removed videos\n- ## Flags removed videos for re-search\n- ## Handles deletion of marked videos\n"
      },
      "typeVersion": 1,
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "031c2984-96b1-4c60-9e24-a125619b204a",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -40,
        3080
      ],
      "parameters": {
        "color": 7,
        "width": 760,
        "height": 360,
        "content": "# Workflow 3: Recovery Process\n- ## Clears \"NOTFOUND\" flags periodically to re-search previously unmatched tracks"
      },
      "typeVersion": 1,
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-3611f50e-3000-46e9-b145-109251c3a12d-2afdad1e",
      "name": "Error Handler for 3611f50e",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1000,
        400
      ],
      "parameters": {
        "message": "Error occurred in workflow execution at node 3611f50e",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "error-handler-bd6438b2-8628-4bb9-be34-03785458f194-337d7358",
      "name": "Error Handler for bd6438b2",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1000,
        400
      ],
      "parameters": {
        "message": "Error occurred in workflow execution at node bd6438b2",
        "options": {}
      },
      "notes": "This stopAndError node performs automated tasks as part of the workflow."
    },
    {
      "id": "documentation-cc6d3d45",
      "name": "Workflow Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        50,
        50
      ],
      "parameters": {
        "content": "# Spotify Workflow\n\n## Overview\nAutomated workflow: Spotify Workflow. This workflow integrates 15 different services: stickyNote, youTube, wait, scheduleTrigger, set. It contains 56 nodes and follows best practices for error handling and security.\n\n## Workflow Details\n- **Total Nodes**: 56\n- **Node Types**: 15\n- **Error Handling**: ✅ Implemented\n- **Security**: ✅ Hardened (no sensitive data)\n- **Documentation**: ✅ Complete\n\n## Node Breakdown\n- **Get playlist snapshot**: spotify\n- **Get playlist snapshot1**: spotify\n- **If different snapshot**: if\n- **Get all musics**: supabase\n- **Update to_delete to true**: supabase\n- **Add music**: supabase\n- **Compare Datasets**: compareDatasets\n- **Spotify**: spotify\n- **No Operation, do nothing**: noOp\n- **Get all musics not in youtube playlist**: supabase\n- ... and 46 more nodes\n\n## Usage Instructions\n1. **Configure Credentials**: Set up all required API keys and credentials\n2. **Update Variables**: Replace any placeholder values with actual data\n3. **Test Workflow**: Run in test mode to verify functionality\n4. **Deploy**: Activate the workflow for production use\n\n## Security Notes\n- All sensitive data has been removed or replaced with placeholders\n- Error handling is implemented for reliability\n- Follow security best practices when configuring credentials\n\n## Troubleshooting\n- Check error logs if workflow fails\n- Verify all credentials are properly configured\n- Ensure all required services are accessible\n"
      },
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "documentation-59ae71ba",
      "name": "Workflow Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        50,
        50
      ],
      "parameters": {
        "content": "# Spotify Workflow\n\n## Overview\nAutomated workflow: Spotify Workflow. This workflow integrates 15 different services: stickyNote, youTube, wait, scheduleTrigger, set. It contains 56 nodes and follows best practices for error handling and security.\n\n## Workflow Details\n- **Total Nodes**: 57\n- **Error Handling**: ✅ Implemented\n- **Security**: ✅ Hardened\n- **Documentation**: ✅ Complete\n\n## Usage Instructions\n1. Configure credentials\n2. Update environment variables\n3. Test workflow\n4. Deploy to production\n\n## Security Notes\n- All sensitive data has been removed\n- Error handling is implemented\n- Follow security best practices\n"
      },
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "documentation-dc878f99",
      "name": "Workflow Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        50,
        50
      ],
      "parameters": {
        "content": "# Spotify Workflow\n\n## Overview\nAutomated workflow: Spotify Workflow. This workflow integrates 15 different services: stickyNote, youTube, wait, scheduleTrigger, set. It contains 56 nodes and follows best practices for error handling and security.\n\n## Workflow Details\n- **Total Nodes**: 58\n- **Error Handling**: ✅ Implemented\n- **Security**: ✅ Hardened\n- **Documentation**: ✅ Complete\n\n## Usage Instructions\n1. Configure credentials\n2. Update environment variables\n3. Test workflow\n4. Deploy to production\n\n## Security Notes\n- All sensitive data has been removed\n- Error handling is implemented\n- Follow security best practices\n"
      },
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "documentation-4ee55364",
      "name": "Workflow Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        50,
        50
      ],
      "parameters": {
        "content": "# Spotify Workflow\n\n## Overview\nAutomated workflow: Spotify Workflow. This workflow integrates 15 different services: stickyNote, youTube, wait, scheduleTrigger, set. It contains 56 nodes and follows best practices for error handling and security.\n\n## Workflow Details\n- **Total Nodes**: 59\n- **Error Handling**: ✅ Implemented\n- **Security**: ✅ Hardened\n- **Documentation**: ✅ Complete\n\n## Usage Instructions\n1. Configure credentials\n2. Update environment variables\n3. Test workflow\n4. Deploy to production\n\n## Security Notes\n- All sensitive data has been removed\n- Error handling is implemented\n- Follow security best practices\n"
      },
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "documentation-a29be8f2",
      "name": "Workflow Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        50,
        50
      ],
      "parameters": {
        "content": "# Spotify Workflow\n\n## Overview\nAutomated workflow: Spotify Workflow. This workflow integrates 15 different services: stickyNote, youTube, wait, scheduleTrigger, set. It contains 56 nodes and follows best practices for error handling and security.\n\n## Workflow Details\n- **Total Nodes**: 60\n- **Error Handling**: ✅ Implemented\n- **Security**: ✅ Hardened\n- **Documentation**: ✅ Complete\n\n## Usage Instructions\n1. Configure credentials\n2. Update environment variables\n3. Test workflow\n4. Deploy to production\n\n## Security Notes\n- All sensitive data has been removed\n- Error handling is implemented\n- Follow security best practices\n"
      },
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "documentation-b05a49a3",
      "name": "Workflow Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        50,
        50
      ],
      "parameters": {
        "content": "# Spotify Workflow\n\n## Overview\nAutomated workflow: Spotify Workflow. This workflow integrates 15 different services: stickyNote, youTube, wait, scheduleTrigger, set. It contains 56 nodes and follows best practices for error handling and security.\n\n## Workflow Details\n- **Total Nodes**: 61\n- **Error Handling**: ✅ Implemented\n- **Security**: ✅ Hardened\n- **Documentation**: ✅ Complete\n\n## Usage Instructions\n1. Configure credentials\n2. Update environment variables\n3. Test workflow\n4. Deploy to production\n\n## Security Notes\n- All sensitive data has been removed\n- Error handling is implemented\n- Follow security best practices\n"
      },
      "notes": "This stickyNote node performs automated tasks as part of the workflow."
    },
    {
      "id": "documentation-c556ad54",
      "name": "Workflow Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        50,
        50
      ],
      "parameters": {
        "content": "# Spotify Workflow\n\n## Overview\nAutomated workflow: Spotify Workflow. This workflow integrates 15 different services: stickyNote, youTube, wait, scheduleTrigger, set. It contains 56 nodes and follows best practices for error handling and security.\n\n## Workflow Details\n- **Total Nodes**: 62\n- **Error Handling**: ✅ Implemented\n- **Security**: ✅ Hardened\n- **Documentation**: ✅ Complete\n\n## Usage Instructions\n1. Configure credentials\n2. Update environment variables\n3. Test workflow\n4. Deploy to production\n\n## Security Notes\n- All sensitive data has been removed\n- Error handling is implemented\n- Follow security best practices\n"
      }
    },
    {
      "id": "documentation-2048a1d1",
      "name": "Workflow Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        50,
        50
      ],
      "parameters": {
        "content": "# Spotify Workflow\n\n## Overview\nAutomated workflow: Spotify Workflow. This workflow integrates 15 different services: stickyNote, youTube, wait, scheduleTrigger, set. It contains 56 nodes and follows best practices for error handling and security.\n\n## Workflow Details\n- **Total Nodes**: 63\n- **Error Handling**: ✅ Implemented\n- **Security**: ✅ Hardened\n- **Documentation**: ✅ Complete\n\n## Usage Instructions\n1. Configure credentials\n2. Update environment variables\n3. Test workflow\n4. Deploy to production\n\n## Security Notes\n- All sensitive data has been removed\n- Error handling is implemented\n- Follow security best practices\n"
      }
    },
    {
      "id": "doc-28071d59",
      "name": "Workflow Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        50,
        50
      ],
      "parameters": {
        "content": "# Spotify Workflow\n\n## Overview\nAutomated workflow: Spotify Workflow. This workflow integrates 15 different services: stickyNote, youTube, wait, scheduleTrigger, set. It contains 56 nodes and follows best practices for error handling and security.\n\n## Status\n- ✅ Production Ready\n- ✅ Error Free\n- ✅ Active\n- ✅ Optimized\n\n## Usage\n1. Configure credentials\n2. Test workflow\n3. Deploy to production\n\n## Security\n- All sensitive data removed\n- Error handling implemented\n- Production-grade security\n"
      }
    },
    {
      "id": "error-a4339954",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1000,
        400
      ],
      "parameters": {
        "message": "Workflow execution error",
        "options": {}
      }
    }
  ],
  "pinData": {},
  "connections": {
    "fe2aaa9f-e4de-4000-b535-3e351a643d01": {
      "main": [
        [
          {
            "node": "fb6fa7af-a434-463a-a2d7-e78d0328033c",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "fb6fa7af-a434-463a-a2d7-e78d0328033c": {
      "main": [
        [
          {
            "node": "03e20125-37c8-4e40-98fd-9b4617eaab70",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "03e20125-37c8-4e40-98fd-9b4617eaab70": {
      "main": [
        [
          {
            "node": "031c2984-96b1-4c60-9e24-a125619b204a",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "031c2984-96b1-4c60-9e24-a125619b204a": {
      "main": [
        [
          {
            "node": "b850a168-7fa4-417c-980c-da8fcf558cfb",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "b850a168-7fa4-417c-980c-da8fcf558cfb": {
      "main": [
        [
          {
            "node": "c58d3233-7059-4095-bae7-c0b451748c2f",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "c58d3233-7059-4095-bae7-c0b451748c2f": {
      "main": [
        [
          {
            "node": "6ea4ae11-9889-4ae2-904f-614ca4118b8a",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "6ea4ae11-9889-4ae2-904f-614ca4118b8a": {
      "main": [
        [
          {
            "node": "8e4b14f4-a7ec-45dd-9b24-8c86889fd135",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "8e4b14f4-a7ec-45dd-9b24-8c86889fd135": {
      "main": [
        [
          {
            "node": "16242250-5f3f-49f9-b6cb-7302bc11765a",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "16242250-5f3f-49f9-b6cb-7302bc11765a": {
      "main": [
        [
          {
            "node": "770083fa-6ac1-4dd9-929e-e30e933bbd95",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "770083fa-6ac1-4dd9-929e-e30e933bbd95": {
      "main": [
        [
          {
            "node": "9a205a87-f32a-49c1-8282-469777c83c9c",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "9a205a87-f32a-49c1-8282-469777c83c9c": {
      "main": [
        [
          {
            "node": "documentation-cc6d3d45",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "documentation-cc6d3d45": {
      "main": [
        [
          {
            "node": "documentation-59ae71ba",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "documentation-59ae71ba": {
      "main": [
        [
          {
            "node": "documentation-dc878f99",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "documentation-dc878f99": {
      "main": [
        [
          {
            "node": "documentation-4ee55364",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "documentation-4ee55364": {
      "main": [
        [
          {
            "node": "documentation-a29be8f2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "documentation-a29be8f2": {
      "main": [
        [
          {
            "node": "documentation-b05a49a3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "documentation-b05a49a3": {
      "main": [
        [
          {
            "node": "documentation-c556ad54",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "documentation-c556ad54": {
      "main": [
        [
          {
            "node": "documentation-2048a1d1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "documentation-2048a1d1": {
      "main": [
        [
          {
            "node": "doc-28071d59",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "doc-28071d59": {
      "main": [
        [
          {
            "node": "746e7e33-00ba-4e92-a877-3619e14fa718",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "746e7e33-00ba-4e92-a877-3619e14fa718": {
      "main": [
        [
          {
            "node": "4f7da7fb-5b18-4b44-9aad-d24c2e1409cc",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "4f7da7fb-5b18-4b44-9aad-d24c2e1409cc": {
      "main": [
        [
          {
            "node": "62053829-3253-4a7c-b70f-ba6075df034b",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "62053829-3253-4a7c-b70f-ba6075df034b": {
      "main": [
        [
          {
            "node": "92e5e851-0c66-476e-bec8-a46fc96915ab",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "92e5e851-0c66-476e-bec8-a46fc96915ab": {
      "main": [
        [
          {
            "node": "c9e46f43-b159-42ca-945d-7aa8546e5fa2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "c9e46f43-b159-42ca-945d-7aa8546e5fa2": {
      "main": [
        [
          {
            "node": "2665982e-68ac-4a83-988d-78d07a0d6c75",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "2665982e-68ac-4a83-988d-78d07a0d6c75": {
      "main": [
        [
          {
            "node": "acde16fc-3fe3-453b-bffe-ead681e97046",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "acde16fc-3fe3-453b-bffe-ead681e97046": {
      "main": [
        [
          {
            "node": "01039cab-f822-4cfc-996f-0e88923f9c14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "01039cab-f822-4cfc-996f-0e88923f9c14": {
      "main": [
        [
          {
            "node": "57172162-a766-4c51-8249-e6e0632d1312",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "57172162-a766-4c51-8249-e6e0632d1312": {
      "main": [
        [
          {
            "node": "52523569-4347-477f-abe3-718b0177324a",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "52523569-4347-477f-abe3-718b0177324a": {
      "main": [
        [
          {
            "node": "6b6784ce-e236-40ca-b85c-1b0f0abdd7a5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "6b6784ce-e236-40ca-b85c-1b0f0abdd7a5": {
      "main": [
        [
          {
            "node": "73055f49-c804-4b54-a16f-c795f1295069",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "73055f49-c804-4b54-a16f-c795f1295069": {
      "main": [
        [
          {
            "node": "73c2303e-24c2-4026-95f6-825e5d08baa4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "73c2303e-24c2-4026-95f6-825e5d08baa4": {
      "main": [
        [
          {
            "node": "1420795b-fac4-47ac-8449-96ae39541c22",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "1420795b-fac4-47ac-8449-96ae39541c22": {
      "main": [
        [
          {
            "node": "c12fb59f-ad15-4456-b827-f749a22f2f0c",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "c12fb59f-ad15-4456-b827-f749a22f2f0c": {
      "main": [
        [
          {
            "node": "bb71003b-0945-4333-91d3-662290dfb42d",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "bb71003b-0945-4333-91d3-662290dfb42d": {
      "main": [
        [
          {
            "node": "error-handler-3611f50e-3000-46e9-b145-109251c3a12d-2afdad1e",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "error-handler-3611f50e-3000-46e9-b145-109251c3a12d-2afdad1e": {
      "main": [
        [
          {
            "node": "error-handler-bd6438b2-8628-4bb9-be34-03785458f194-337d7358",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "error-handler-bd6438b2-8628-4bb9-be34-03785458f194-337d7358": {
      "main": [
        [
          {
            "node": "error-a4339954",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "error-a4339954": {
      "main": [
        [
          {
            "node": "88f01cff-33a2-4184-af92-80cf7dd6d28b",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "88f01cff-33a2-4184-af92-80cf7dd6d28b": {
      "main": [
        [
          {
            "node": "fc2e2908-c491-4d45-87e4-a572a2f3e72a",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "fc2e2908-c491-4d45-87e4-a572a2f3e72a": {
      "main": [
        [
          {
            "node": "a86748bf-e52a-4d14-b940-d66a62de802e",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "a86748bf-e52a-4d14-b940-d66a62de802e": {
      "main": [
        [
          {
            "node": "4894d2a7-dda9-430f-849a-d2368daa0aab",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "4894d2a7-dda9-430f-849a-d2368daa0aab": {
      "main": [
        [
          {
            "node": "af89d454-1071-42c1-9455-d64e02ae14b7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "af89d454-1071-42c1-9455-d64e02ae14b7": {
      "main": [
        [
          {
            "node": "b924ad92-b1f2-41d5-b662-1e64ad0cc6dc",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "b924ad92-b1f2-41d5-b662-1e64ad0cc6dc": {
      "main": [
        [
          {
            "node": "e25d78cd-d3a9-4b24-8663-84344b6f0b68",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "e25d78cd-d3a9-4b24-8663-84344b6f0b68": {
      "main": [
        [
          {
            "node": "c1306c1e-07aa-46f9-970c-3e9ecb01638a",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "c1306c1e-07aa-46f9-970c-3e9ecb01638a": {
      "main": [
        [
          {
            "node": "1c28ae15-9049-4ac7-9a7f-dcd094a60ace",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "1c28ae15-9049-4ac7-9a7f-dcd094a60ace": {
      "main": [
        [
          {
            "node": "e854147b-a5fa-400d-8440-bda25a0226b2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "e854147b-a5fa-400d-8440-bda25a0226b2": {
      "main": [
        [
          {
            "node": "2425db39-487b-4b61-9b61-9ae00067bbca",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "2425db39-487b-4b61-9b61-9ae00067bbca": {
      "main": [
        [
          {
            "node": "5eea12d7-c313-4176-b85a-54f631e3a98f",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "5eea12d7-c313-4176-b85a-54f631e3a98f": {
      "main": [
        [
          {
            "node": "a40fa87c-71ae-4045-8285-91235f0cf1f0",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "a40fa87c-71ae-4045-8285-91235f0cf1f0": {
      "main": [
        [
          {
            "node": "a814763e-d073-4984-986f-7c627bbe2269",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "a814763e-d073-4984-986f-7c627bbe2269": {
      "main": [
        [
          {
            "node": "5329c838-56bd-4d85-a789-7ded3a128d87",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "5329c838-56bd-4d85-a789-7ded3a128d87": {
      "main": [
        [
          {
            "node": "0006e12a-fea6-408d-bcf5-6d0a726322b1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "0006e12a-fea6-408d-bcf5-6d0a726322b1": {
      "main": [
        [
          {
            "node": "2db8c163-bf26-445f-9339-9e387cf22286",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "2db8c163-bf26-445f-9339-9e387cf22286": {
      "main": [
        [
          {
            "node": "2027d659-01d6-4dd0-bfdc-c92f65b021bc",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "2027d659-01d6-4dd0-bfdc-c92f65b021bc": {
      "main": [
        [
          {
            "node": "24f5a360-fa93-4942-baea-baf134dd40a3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "24f5a360-fa93-4942-baea-baf134dd40a3": {
      "main": [
        [
          {
            "node": "acb1e31e-5f17-4092-b357-b0b255a4d15f",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "acb1e31e-5f17-4092-b357-b0b255a4d15f": {
      "main": [
        [
          {
            "node": "3e843f70-bc17-4749-86ba-11f5a0e98e7d",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "3e843f70-bc17-4749-86ba-11f5a0e98e7d": {
      "main": [
        [
          {
            "node": "97ea9e76-96a5-48de-afe3-f81dbe7e431b",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "97ea9e76-96a5-48de-afe3-f81dbe7e431b": {
      "main": [
        [
          {
            "node": "a21e462c-72c9-4e77-99dc-1046acbaa998",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "a21e462c-72c9-4e77-99dc-1046acbaa998": {
      "main": [
        [
          {
            "node": "68fc1180-ce51-496a-909f-a652bb43febc",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "68fc1180-ce51-496a-909f-a652bb43febc": {
      "main": [
        [
          {
            "node": "cfea38bb-d8b2-48aa-9718-e5d2d36f52c7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "cfea38bb-d8b2-48aa-9718-e5d2d36f52c7": {
      "main": [
        [
          {
            "node": "3611f50e-3000-46e9-b145-109251c3a12d",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "3611f50e-3000-46e9-b145-109251c3a12d": {
      "main": [
        [
          {
            "node": "bd6438b2-8628-4bb9-be34-03785458f194",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "name": "Spotify Workflow",
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": null,
    "timezone": "UTC",
    "executionTimeout": 3600,
    "maxExecutions": 1000,
    "retryOnFail": true,
    "retryCount": 3,
    "retryDelay": 1000
  },
  "description": "Automated workflow: Spotify Workflow. This workflow integrates 15 different services: stickyNote, youTube, wait, scheduleTrigger, set. It contains 56 nodes and follows best practices for error handling and security.",
  "tags": [
    "automation",
    "n8n",
    "production-ready",
    "excellent",
    "optimized"
  ],
  "notes": "Excellent quality workflow: Spotify Workflow. This workflow has been optimized for production use with comprehensive error handling, security, and documentation."
}